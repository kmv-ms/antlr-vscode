{"version":3,"file":"AntlrTreeDataProvider.js","sourceRoot":"","sources":["../../../src/frontend/AntlrTreeDataProvider.ts"],"names":[],"mappings":";;;AAKA,mCAAuG;AAGvG,MAAa,qBAAqB;IAKD;IAJnB,WAAW,CAAqB;IAElC,WAAW,GAAG,IAAI,qBAAY,EAAQ,CAAC;IAE/C,YAA6B,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;IAAI,CAAC;IAEtD,IAAW,mBAAmB;QAC1B,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IAClC,CAAC;IAEM,OAAO,CAAC,QAAkC;QAC7C,IAAI,QAAQ,IAAI,QAAQ,CAAC,UAAU,KAAK,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,KAAK,MAAM,EAAE;YAC/E,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,QAAQ,CAAC;SACxC;aAAM;YACH,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;SAChC;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAEM,WAAW,CAAC,OAAU;QACzB,OAAO,OAAO,CAAC;IACnB,CAAC;IAEM,WAAW,CAAC,QAAY;QAC3B,OAAO,SAAS,CAAC;IACrB,CAAC;CACJ;AA3BD,sDA2BC","sourcesContent":["/*\r\n * Copyright (c) Mike Lischke. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n\r\nimport { TreeDataProvider, TreeItem, EventEmitter, TextDocument, ProviderResult, Event } from \"vscode\";\r\nimport { AntlrFacade } from \"../backend/facade\";\r\n\r\nexport class AntlrTreeDataProvider<T extends TreeItem> implements TreeDataProvider<T> {\r\n    protected currentFile: string | undefined;\r\n\r\n    private changeEvent = new EventEmitter<void>();\r\n\r\n    public constructor(protected backend: AntlrFacade) { }\r\n\r\n    public get onDidChangeTreeData(): Event<void> {\r\n        return this.changeEvent.event;\r\n    }\r\n\r\n    public refresh(document: TextDocument | undefined): void {\r\n        if (document && document.languageId === \"antlr\" && document.uri.scheme === \"file\") {\r\n            this.currentFile = document.fileName;\r\n        } else {\r\n            this.currentFile = undefined;\r\n        }\r\n        this.changeEvent.fire();\r\n    }\r\n\r\n    public getTreeItem(element: T): TreeItem {\r\n        return element;\r\n    }\r\n\r\n    public getChildren(_element?: T): ProviderResult<T[]> {\r\n        return undefined;\r\n    }\r\n}\r\n"]}