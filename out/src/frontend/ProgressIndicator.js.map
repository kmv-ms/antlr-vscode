{"version":3,"file":"ProgressIndicator.js","sourceRoot":"","sources":["../../../src/frontend/ProgressIndicator.ts"],"names":[],"mappings":";;;AAKA,mCAAmE;AAEnE,MAAa,iBAAiB;IAClB,MAAM,CAAC,aAAa,GAAG,iEAAiE,CAAC;IAEzF,aAAa,CAAgB;IAC7B,KAAK,CAAwC;IAC7C,QAAQ,GAAG,CAAC,CAAC;IAErB;QACI,IAAI,CAAC,aAAa,GAAG,eAAM,CAAC,mBAAmB,CAAC,2BAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAC5E,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,oCAAoC,CAAC;IACtE,CAAC;IAEM,cAAc;QACjB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE;YAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAC,aAAa,CAAC,MAAM,CAAC;YACrE,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,QAAQ,GAAG,iBAAiB,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACnF,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,EAAE,EAAE,CAAC,CAAC;IACX,CAAC;IAEM,aAAa;QAChB,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC7B;IACL,CAAC;;AA5BQ,8CAAiB","sourcesContent":["/*\r\n * Copyright (c) Mike Lischke. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n\r\nimport { StatusBarAlignment, StatusBarItem, window } from \"vscode\";\r\n\r\nexport class ProgressIndicator {\r\n    private static progressChars = \"⠁⠃⠅⡁⢁⠡⠑⠉⠁⠃⠇⡃⢃⠣⠓⠋⠃⠃⠇⡇⢇⠧⠗⠏⠇⠇⠇⡇⣇⡧⡗⡏⡇⡇⡇⡇⣇⣧⣗⣏⣇⣇⣇⣇⣇⣧⣷⣯⣧⣧⣧⣧⣧⣧⣷⣿⣿⣿⣿⣿⣿⣿⣿\";\r\n\r\n    private statusBarItem: StatusBarItem;\r\n    private timer: ReturnType<typeof setInterval> | null;\r\n    private progress = 0;\r\n\r\n    public constructor() {\r\n        this.statusBarItem = window.createStatusBarItem(StatusBarAlignment.Left, 0);\r\n        this.statusBarItem.hide();\r\n        this.statusBarItem.tooltip = \"ANTLR4 generating interpreter data\";\r\n    }\r\n\r\n    public startAnimation(): void {\r\n        this.statusBarItem.show();\r\n        this.timer = setInterval(() => {\r\n            const index = this.progress % ProgressIndicator.progressChars.length;\r\n            this.statusBarItem.text = \"ANTLR \" + ProgressIndicator.progressChars.charAt(index);\r\n            this.progress++;\r\n        }, 50);\r\n    }\r\n\r\n    public stopAnimation(): void {\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n            this.timer = null;\r\n            this.statusBarItem.hide();\r\n        }\r\n    }\r\n}\r\n"]}