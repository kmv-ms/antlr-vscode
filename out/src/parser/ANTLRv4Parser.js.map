{"version":3,"file":"ANTLRv4Parser.js","sourceRoot":"","sources":["../../../src/parser/ANTLRv4Parser.ts"],"names":[],"mappings":"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","sourcesContent":["// Generated from grammars/ANTLRv4Parser.g4 by ANTLR 4.9.0-SNAPSHOT\r\n\r\n\r\nimport { ATN } from \"antlr4ts/atn/ATN\";\r\nimport { ATNDeserializer } from \"antlr4ts/atn/ATNDeserializer\";\r\nimport { FailedPredicateException } from \"antlr4ts/FailedPredicateException\";\r\nimport { NotNull } from \"antlr4ts/Decorators\";\r\nimport { NoViableAltException } from \"antlr4ts/NoViableAltException\";\r\nimport { Override } from \"antlr4ts/Decorators\";\r\nimport { Parser } from \"antlr4ts/Parser\";\r\nimport { ParserRuleContext } from \"antlr4ts/ParserRuleContext\";\r\nimport { ParserATNSimulator } from \"antlr4ts/atn/ParserATNSimulator\";\r\nimport { ParseTreeListener } from \"antlr4ts/tree/ParseTreeListener\";\r\nimport { ParseTreeVisitor } from \"antlr4ts/tree/ParseTreeVisitor\";\r\nimport { RecognitionException } from \"antlr4ts/RecognitionException\";\r\nimport { RuleContext } from \"antlr4ts/RuleContext\";\r\n//import { RuleVersion } from \"antlr4ts/RuleVersion\";\r\nimport { TerminalNode } from \"antlr4ts/tree/TerminalNode\";\r\nimport { Token } from \"antlr4ts/Token\";\r\nimport { TokenStream } from \"antlr4ts/TokenStream\";\r\nimport { Vocabulary } from \"antlr4ts/Vocabulary\";\r\nimport { VocabularyImpl } from \"antlr4ts/VocabularyImpl\";\r\n\r\nimport * as Utils from \"antlr4ts/misc/Utils\";\r\n\r\nimport { ANTLRv4ParserListener } from \"./ANTLRv4ParserListener\";\r\nimport { ANTLRv4ParserVisitor } from \"./ANTLRv4ParserVisitor\";\r\n\r\n\r\nexport class ANTLRv4Parser extends Parser {\r\n    public static readonly TOKEN_REF = 1;\r\n    public static readonly RULE_REF = 2;\r\n    public static readonly LEXER_CHAR_SET = 3;\r\n    public static readonly DOC_COMMENT = 4;\r\n    public static readonly BLOCK_COMMENT = 5;\r\n    public static readonly LINE_COMMENT = 6;\r\n    public static readonly INT = 7;\r\n    public static readonly STRING_LITERAL = 8;\r\n    public static readonly UNTERMINATED_STRING_LITERAL = 9;\r\n    public static readonly BEGIN_ARGUMENT = 10;\r\n    public static readonly BEGIN_ACTION = 11;\r\n    public static readonly OPTIONS = 12;\r\n    public static readonly TOKENS = 13;\r\n    public static readonly CHANNELS = 14;\r\n    public static readonly IMPORT = 15;\r\n    public static readonly FRAGMENT = 16;\r\n    public static readonly LEXER = 17;\r\n    public static readonly PARSER = 18;\r\n    public static readonly GRAMMAR = 19;\r\n    public static readonly PROTECTED = 20;\r\n    public static readonly PUBLIC = 21;\r\n    public static readonly PRIVATE = 22;\r\n    public static readonly RETURNS = 23;\r\n    public static readonly LOCALS = 24;\r\n    public static readonly THROWS = 25;\r\n    public static readonly CATCH = 26;\r\n    public static readonly FINALLY = 27;\r\n    public static readonly MODE = 28;\r\n    public static readonly COLON = 29;\r\n    public static readonly COLONCOLON = 30;\r\n    public static readonly COMMA = 31;\r\n    public static readonly SEMI = 32;\r\n    public static readonly LPAREN = 33;\r\n    public static readonly RPAREN = 34;\r\n    public static readonly LBRACE = 35;\r\n    public static readonly RBRACE = 36;\r\n    public static readonly RARROW = 37;\r\n    public static readonly LT = 38;\r\n    public static readonly GT = 39;\r\n    public static readonly ASSIGN = 40;\r\n    public static readonly QUESTION = 41;\r\n    public static readonly STAR = 42;\r\n    public static readonly PLUS_ASSIGN = 43;\r\n    public static readonly PLUS = 44;\r\n    public static readonly OR = 45;\r\n    public static readonly DOLLAR = 46;\r\n    public static readonly RANGE = 47;\r\n    public static readonly DOT = 48;\r\n    public static readonly AT = 49;\r\n    public static readonly POUND = 50;\r\n    public static readonly NOT = 51;\r\n    public static readonly ID = 52;\r\n    public static readonly WS = 53;\r\n    public static readonly END_ARGUMENT = 54;\r\n    public static readonly UNTERMINATED_ARGUMENT = 55;\r\n    public static readonly ARGUMENT_CONTENT = 56;\r\n    public static readonly END_ACTION = 57;\r\n    public static readonly UNTERMINATED_ACTION = 58;\r\n    public static readonly ACTION_CONTENT = 59;\r\n    public static readonly UNTERMINATED_CHAR_SET = 60;\r\n    public static readonly RULE_grammarSpec = 0;\r\n    public static readonly RULE_grammarType = 1;\r\n    public static readonly RULE_prequelConstruct = 2;\r\n    public static readonly RULE_optionsSpec = 3;\r\n    public static readonly RULE_option = 4;\r\n    public static readonly RULE_optionValue = 5;\r\n    public static readonly RULE_delegateGrammars = 6;\r\n    public static readonly RULE_delegateGrammar = 7;\r\n    public static readonly RULE_tokensSpec = 8;\r\n    public static readonly RULE_channelsSpec = 9;\r\n    public static readonly RULE_idList = 10;\r\n    public static readonly RULE_namedAction = 11;\r\n    public static readonly RULE_actionScopeName = 12;\r\n    public static readonly RULE_actionBlock = 13;\r\n    public static readonly RULE_argActionBlock = 14;\r\n    public static readonly RULE_modeSpec = 15;\r\n    public static readonly RULE_rules = 16;\r\n    public static readonly RULE_ruleSpec = 17;\r\n    public static readonly RULE_parserRuleSpec = 18;\r\n    public static readonly RULE_exceptionGroup = 19;\r\n    public static readonly RULE_exceptionHandler = 20;\r\n    public static readonly RULE_finallyClause = 21;\r\n    public static readonly RULE_rulePrequel = 22;\r\n    public static readonly RULE_ruleReturns = 23;\r\n    public static readonly RULE_throwsSpec = 24;\r\n    public static readonly RULE_localsSpec = 25;\r\n    public static readonly RULE_ruleAction = 26;\r\n    public static readonly RULE_ruleModifiers = 27;\r\n    public static readonly RULE_ruleModifier = 28;\r\n    public static readonly RULE_ruleBlock = 29;\r\n    public static readonly RULE_ruleAltList = 30;\r\n    public static readonly RULE_labeledAlt = 31;\r\n    public static readonly RULE_lexerRuleSpec = 32;\r\n    public static readonly RULE_lexerRuleBlock = 33;\r\n    public static readonly RULE_lexerAltList = 34;\r\n    public static readonly RULE_lexerAlt = 35;\r\n    public static readonly RULE_lexerElements = 36;\r\n    public static readonly RULE_lexerElement = 37;\r\n    public static readonly RULE_labeledLexerElement = 38;\r\n    public static readonly RULE_lexerBlock = 39;\r\n    public static readonly RULE_lexerCommands = 40;\r\n    public static readonly RULE_lexerCommand = 41;\r\n    public static readonly RULE_lexerCommandName = 42;\r\n    public static readonly RULE_lexerCommandExpr = 43;\r\n    public static readonly RULE_altList = 44;\r\n    public static readonly RULE_alternative = 45;\r\n    public static readonly RULE_element = 46;\r\n    public static readonly RULE_labeledElement = 47;\r\n    public static readonly RULE_ebnf = 48;\r\n    public static readonly RULE_blockSuffix = 49;\r\n    public static readonly RULE_ebnfSuffix = 50;\r\n    public static readonly RULE_lexerAtom = 51;\r\n    public static readonly RULE_atom = 52;\r\n    public static readonly RULE_notSet = 53;\r\n    public static readonly RULE_blockSet = 54;\r\n    public static readonly RULE_setElement = 55;\r\n    public static readonly RULE_block = 56;\r\n    public static readonly RULE_ruleref = 57;\r\n    public static readonly RULE_characterRange = 58;\r\n    public static readonly RULE_terminalRule = 59;\r\n    public static readonly RULE_elementOptions = 60;\r\n    public static readonly RULE_elementOption = 61;\r\n    public static readonly RULE_identifier = 62;\r\n    // tslint:disable:no-trailing-whitespace\r\n    public static readonly ruleNames: string[] = [\r\n        \"grammarSpec\", \"grammarType\", \"prequelConstruct\", \"optionsSpec\", \"option\",\r\n        \"optionValue\", \"delegateGrammars\", \"delegateGrammar\", \"tokensSpec\", \"channelsSpec\",\r\n        \"idList\", \"namedAction\", \"actionScopeName\", \"actionBlock\", \"argActionBlock\",\r\n        \"modeSpec\", \"rules\", \"ruleSpec\", \"parserRuleSpec\", \"exceptionGroup\", \"exceptionHandler\",\r\n        \"finallyClause\", \"rulePrequel\", \"ruleReturns\", \"throwsSpec\", \"localsSpec\",\r\n        \"ruleAction\", \"ruleModifiers\", \"ruleModifier\", \"ruleBlock\", \"ruleAltList\",\r\n        \"labeledAlt\", \"lexerRuleSpec\", \"lexerRuleBlock\", \"lexerAltList\", \"lexerAlt\",\r\n        \"lexerElements\", \"lexerElement\", \"labeledLexerElement\", \"lexerBlock\",\r\n        \"lexerCommands\", \"lexerCommand\", \"lexerCommandName\", \"lexerCommandExpr\",\r\n        \"altList\", \"alternative\", \"element\", \"labeledElement\", \"ebnf\", \"blockSuffix\",\r\n        \"ebnfSuffix\", \"lexerAtom\", \"atom\", \"notSet\", \"blockSet\", \"setElement\",\r\n        \"block\", \"ruleref\", \"characterRange\", \"terminalRule\", \"elementOptions\",\r\n        \"elementOption\", \"identifier\",\r\n    ];\r\n\r\n    private static readonly _LITERAL_NAMES: Array<string | undefined> = [\r\n        undefined, undefined, undefined, undefined, undefined, undefined, undefined,\r\n        undefined, undefined, undefined, undefined, undefined, \"'options'\", \"'tokens'\",\r\n        \"'channels'\", \"'import'\", \"'fragment'\", \"'lexer'\", \"'parser'\", \"'grammar'\",\r\n        \"'protected'\", \"'public'\", \"'private'\", \"'returns'\", \"'locals'\", \"'throws'\",\r\n        \"'catch'\", \"'finally'\", \"'mode'\",\r\n    ];\r\n    private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [\r\n        undefined, \"TOKEN_REF\", \"RULE_REF\", \"LEXER_CHAR_SET\", \"DOC_COMMENT\", \"BLOCK_COMMENT\",\r\n        \"LINE_COMMENT\", \"INT\", \"STRING_LITERAL\", \"UNTERMINATED_STRING_LITERAL\",\r\n        \"BEGIN_ARGUMENT\", \"BEGIN_ACTION\", \"OPTIONS\", \"TOKENS\", \"CHANNELS\", \"IMPORT\",\r\n        \"FRAGMENT\", \"LEXER\", \"PARSER\", \"GRAMMAR\", \"PROTECTED\", \"PUBLIC\", \"PRIVATE\",\r\n        \"RETURNS\", \"LOCALS\", \"THROWS\", \"CATCH\", \"FINALLY\", \"MODE\", \"COLON\", \"COLONCOLON\",\r\n        \"COMMA\", \"SEMI\", \"LPAREN\", \"RPAREN\", \"LBRACE\", \"RBRACE\", \"RARROW\", \"LT\",\r\n        \"GT\", \"ASSIGN\", \"QUESTION\", \"STAR\", \"PLUS_ASSIGN\", \"PLUS\", \"OR\", \"DOLLAR\",\r\n        \"RANGE\", \"DOT\", \"AT\", \"POUND\", \"NOT\", \"ID\", \"WS\", \"END_ARGUMENT\", \"UNTERMINATED_ARGUMENT\",\r\n        \"ARGUMENT_CONTENT\", \"END_ACTION\", \"UNTERMINATED_ACTION\", \"ACTION_CONTENT\",\r\n        \"UNTERMINATED_CHAR_SET\",\r\n    ];\r\n    public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ANTLRv4Parser._LITERAL_NAMES, ANTLRv4Parser._SYMBOLIC_NAMES, []);\r\n\r\n    // @Override\r\n    // @NotNull\r\n    public get vocabulary(): Vocabulary {\r\n        return ANTLRv4Parser.VOCABULARY;\r\n    }\r\n    // tslint:enable:no-trailing-whitespace\r\n\r\n    // @Override\r\n    public get grammarFileName(): string { return \"ANTLRv4Parser.g4\"; }\r\n\r\n    // @Override\r\n    public get ruleNames(): string[] { return ANTLRv4Parser.ruleNames; }\r\n\r\n    // @Override\r\n    public override get serializedATN(): string { return ANTLRv4Parser._serializedATN; }\r\n\r\n    protected createFailedPredicateException(predicate?: string, message?: string): FailedPredicateException {\r\n        return new FailedPredicateException(this, predicate, message);\r\n    }\r\n\r\n    constructor(input: TokenStream) {\r\n        super(input);\r\n        this._interp = new ParserATNSimulator(ANTLRv4Parser._ATN, this);\r\n    }\r\n    // @RuleVersion(0)\r\n    public grammarSpec(): GrammarSpecContext {\r\n        let _localctx: GrammarSpecContext = new GrammarSpecContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 0, ANTLRv4Parser.RULE_grammarSpec);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 129;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.DOC_COMMENT) {\r\n                    {\r\n                        {\r\n                            this.state = 126;\r\n                            this.match(ANTLRv4Parser.DOC_COMMENT);\r\n                        }\r\n                    }\r\n                    this.state = 131;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n                this.state = 132;\r\n                this.grammarType();\r\n                this.state = 133;\r\n                this.identifier();\r\n                this.state = 134;\r\n                this.match(ANTLRv4Parser.SEMI);\r\n                this.state = 138;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ANTLRv4Parser.OPTIONS) | (1 << ANTLRv4Parser.TOKENS) | (1 << ANTLRv4Parser.CHANNELS) | (1 << ANTLRv4Parser.IMPORT))) !== 0) || _la === ANTLRv4Parser.AT) {\r\n                    {\r\n                        {\r\n                            this.state = 135;\r\n                            this.prequelConstruct();\r\n                        }\r\n                    }\r\n                    this.state = 140;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n                this.state = 141;\r\n                this.rules();\r\n                this.state = 145;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.MODE) {\r\n                    {\r\n                        {\r\n                            this.state = 142;\r\n                            this.modeSpec();\r\n                        }\r\n                    }\r\n                    this.state = 147;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n                this.state = 148;\r\n                this.match(ANTLRv4Parser.EOF);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public grammarType(): GrammarTypeContext {\r\n        let _localctx: GrammarTypeContext = new GrammarTypeContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 2, ANTLRv4Parser.RULE_grammarType);\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 155;\r\n                this._errHandler.sync(this);\r\n                switch (this._input.LA(1)) {\r\n                    case ANTLRv4Parser.LEXER:\r\n                        {\r\n                            this.state = 150;\r\n                            this.match(ANTLRv4Parser.LEXER);\r\n                            this.state = 151;\r\n                            this.match(ANTLRv4Parser.GRAMMAR);\r\n                        }\r\n                        break;\r\n                    case ANTLRv4Parser.PARSER:\r\n                        {\r\n                            this.state = 152;\r\n                            this.match(ANTLRv4Parser.PARSER);\r\n                            this.state = 153;\r\n                            this.match(ANTLRv4Parser.GRAMMAR);\r\n                        }\r\n                        break;\r\n                    case ANTLRv4Parser.GRAMMAR:\r\n                        {\r\n                            this.state = 154;\r\n                            this.match(ANTLRv4Parser.GRAMMAR);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        throw new NoViableAltException(this);\r\n                }\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public prequelConstruct(): PrequelConstructContext {\r\n        let _localctx: PrequelConstructContext = new PrequelConstructContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 4, ANTLRv4Parser.RULE_prequelConstruct);\r\n        try {\r\n            this.state = 162;\r\n            this._errHandler.sync(this);\r\n            switch (this._input.LA(1)) {\r\n                case ANTLRv4Parser.OPTIONS:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 157;\r\n                        this.optionsSpec();\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.IMPORT:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 158;\r\n                        this.delegateGrammars();\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.TOKENS:\r\n                    this.enterOuterAlt(_localctx, 3);\r\n                    {\r\n                        this.state = 159;\r\n                        this.tokensSpec();\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.CHANNELS:\r\n                    this.enterOuterAlt(_localctx, 4);\r\n                    {\r\n                        this.state = 160;\r\n                        this.channelsSpec();\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.AT:\r\n                    this.enterOuterAlt(_localctx, 5);\r\n                    {\r\n                        this.state = 161;\r\n                        this.namedAction();\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw new NoViableAltException(this);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public optionsSpec(): OptionsSpecContext {\r\n        let _localctx: OptionsSpecContext = new OptionsSpecContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 6, ANTLRv4Parser.RULE_optionsSpec);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 164;\r\n                this.match(ANTLRv4Parser.OPTIONS);\r\n                this.state = 165;\r\n                this.match(ANTLRv4Parser.LBRACE);\r\n                this.state = 171;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.TOKEN_REF || _la === ANTLRv4Parser.RULE_REF) {\r\n                    {\r\n                        {\r\n                            this.state = 166;\r\n                            this.option();\r\n                            this.state = 167;\r\n                            this.match(ANTLRv4Parser.SEMI);\r\n                        }\r\n                    }\r\n                    this.state = 173;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n                this.state = 174;\r\n                this.match(ANTLRv4Parser.RBRACE);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public option(): OptionContext {\r\n        let _localctx: OptionContext = new OptionContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 8, ANTLRv4Parser.RULE_option);\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 176;\r\n                this.identifier();\r\n                this.state = 177;\r\n                this.match(ANTLRv4Parser.ASSIGN);\r\n                this.state = 178;\r\n                this.optionValue();\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public optionValue(): OptionValueContext {\r\n        let _localctx: OptionValueContext = new OptionValueContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 10, ANTLRv4Parser.RULE_optionValue);\r\n        let _la: number;\r\n        try {\r\n            this.state = 191;\r\n            this._errHandler.sync(this);\r\n            switch (this._input.LA(1)) {\r\n                case ANTLRv4Parser.TOKEN_REF:\r\n                case ANTLRv4Parser.RULE_REF:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 180;\r\n                        this.identifier();\r\n                        this.state = 185;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        while (_la === ANTLRv4Parser.DOT) {\r\n                            {\r\n                                {\r\n                                    this.state = 181;\r\n                                    this.match(ANTLRv4Parser.DOT);\r\n                                    this.state = 182;\r\n                                    this.identifier();\r\n                                }\r\n                            }\r\n                            this.state = 187;\r\n                            this._errHandler.sync(this);\r\n                            _la = this._input.LA(1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.STRING_LITERAL:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 188;\r\n                        this.match(ANTLRv4Parser.STRING_LITERAL);\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.BEGIN_ACTION:\r\n                    this.enterOuterAlt(_localctx, 3);\r\n                    {\r\n                        this.state = 189;\r\n                        this.actionBlock();\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.INT:\r\n                    this.enterOuterAlt(_localctx, 4);\r\n                    {\r\n                        this.state = 190;\r\n                        this.match(ANTLRv4Parser.INT);\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw new NoViableAltException(this);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public delegateGrammars(): DelegateGrammarsContext {\r\n        let _localctx: DelegateGrammarsContext = new DelegateGrammarsContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 12, ANTLRv4Parser.RULE_delegateGrammars);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 193;\r\n                this.match(ANTLRv4Parser.IMPORT);\r\n                this.state = 194;\r\n                this.delegateGrammar();\r\n                this.state = 199;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.COMMA) {\r\n                    {\r\n                        {\r\n                            this.state = 195;\r\n                            this.match(ANTLRv4Parser.COMMA);\r\n                            this.state = 196;\r\n                            this.delegateGrammar();\r\n                        }\r\n                    }\r\n                    this.state = 201;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n                this.state = 202;\r\n                this.match(ANTLRv4Parser.SEMI);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public delegateGrammar(): DelegateGrammarContext {\r\n        let _localctx: DelegateGrammarContext = new DelegateGrammarContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 14, ANTLRv4Parser.RULE_delegateGrammar);\r\n        try {\r\n            this.state = 209;\r\n            this._errHandler.sync(this);\r\n            switch (this.interpreter.adaptivePredict(this._input, 9, this._ctx)) {\r\n                case 1:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 204;\r\n                        this.identifier();\r\n                        this.state = 205;\r\n                        this.match(ANTLRv4Parser.ASSIGN);\r\n                        this.state = 206;\r\n                        this.identifier();\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 208;\r\n                        this.identifier();\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public tokensSpec(): TokensSpecContext {\r\n        let _localctx: TokensSpecContext = new TokensSpecContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 16, ANTLRv4Parser.RULE_tokensSpec);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 211;\r\n                this.match(ANTLRv4Parser.TOKENS);\r\n                this.state = 212;\r\n                this.match(ANTLRv4Parser.LBRACE);\r\n                this.state = 214;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if (_la === ANTLRv4Parser.TOKEN_REF || _la === ANTLRv4Parser.RULE_REF) {\r\n                    {\r\n                        this.state = 213;\r\n                        this.idList();\r\n                    }\r\n                }\r\n\r\n                this.state = 216;\r\n                this.match(ANTLRv4Parser.RBRACE);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public channelsSpec(): ChannelsSpecContext {\r\n        let _localctx: ChannelsSpecContext = new ChannelsSpecContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 18, ANTLRv4Parser.RULE_channelsSpec);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 218;\r\n                this.match(ANTLRv4Parser.CHANNELS);\r\n                this.state = 219;\r\n                this.match(ANTLRv4Parser.LBRACE);\r\n                this.state = 221;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if (_la === ANTLRv4Parser.TOKEN_REF || _la === ANTLRv4Parser.RULE_REF) {\r\n                    {\r\n                        this.state = 220;\r\n                        this.idList();\r\n                    }\r\n                }\r\n\r\n                this.state = 223;\r\n                this.match(ANTLRv4Parser.RBRACE);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public idList(): IdListContext {\r\n        let _localctx: IdListContext = new IdListContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 20, ANTLRv4Parser.RULE_idList);\r\n        let _la: number;\r\n        try {\r\n            let _alt: number;\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 225;\r\n                this.identifier();\r\n                this.state = 230;\r\n                this._errHandler.sync(this);\r\n                _alt = this.interpreter.adaptivePredict(this._input, 12, this._ctx);\r\n                while (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {\r\n                    if (_alt === 1) {\r\n                        {\r\n                            {\r\n                                this.state = 226;\r\n                                this.match(ANTLRv4Parser.COMMA);\r\n                                this.state = 227;\r\n                                this.identifier();\r\n                            }\r\n                        }\r\n                    }\r\n                    this.state = 232;\r\n                    this._errHandler.sync(this);\r\n                    _alt = this.interpreter.adaptivePredict(this._input, 12, this._ctx);\r\n                }\r\n                this.state = 234;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if (_la === ANTLRv4Parser.COMMA) {\r\n                    {\r\n                        this.state = 233;\r\n                        this.match(ANTLRv4Parser.COMMA);\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public namedAction(): NamedActionContext {\r\n        let _localctx: NamedActionContext = new NamedActionContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 22, ANTLRv4Parser.RULE_namedAction);\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 236;\r\n                this.match(ANTLRv4Parser.AT);\r\n                this.state = 240;\r\n                this._errHandler.sync(this);\r\n                switch (this.interpreter.adaptivePredict(this._input, 14, this._ctx)) {\r\n                    case 1:\r\n                        {\r\n                            this.state = 237;\r\n                            this.actionScopeName();\r\n                            this.state = 238;\r\n                            this.match(ANTLRv4Parser.COLONCOLON);\r\n                        }\r\n                        break;\r\n                }\r\n                this.state = 242;\r\n                this.identifier();\r\n                this.state = 243;\r\n                this.actionBlock();\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public actionScopeName(): ActionScopeNameContext {\r\n        let _localctx: ActionScopeNameContext = new ActionScopeNameContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 24, ANTLRv4Parser.RULE_actionScopeName);\r\n        try {\r\n            this.state = 248;\r\n            this._errHandler.sync(this);\r\n            switch (this._input.LA(1)) {\r\n                case ANTLRv4Parser.TOKEN_REF:\r\n                case ANTLRv4Parser.RULE_REF:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 245;\r\n                        this.identifier();\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.LEXER:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 246;\r\n                        this.match(ANTLRv4Parser.LEXER);\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.PARSER:\r\n                    this.enterOuterAlt(_localctx, 3);\r\n                    {\r\n                        this.state = 247;\r\n                        this.match(ANTLRv4Parser.PARSER);\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw new NoViableAltException(this);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public actionBlock(): ActionBlockContext {\r\n        let _localctx: ActionBlockContext = new ActionBlockContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 26, ANTLRv4Parser.RULE_actionBlock);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 250;\r\n                this.match(ANTLRv4Parser.BEGIN_ACTION);\r\n                this.state = 254;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.ACTION_CONTENT) {\r\n                    {\r\n                        {\r\n                            this.state = 251;\r\n                            this.match(ANTLRv4Parser.ACTION_CONTENT);\r\n                        }\r\n                    }\r\n                    this.state = 256;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n                this.state = 257;\r\n                this.match(ANTLRv4Parser.END_ACTION);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public argActionBlock(): ArgActionBlockContext {\r\n        let _localctx: ArgActionBlockContext = new ArgActionBlockContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 28, ANTLRv4Parser.RULE_argActionBlock);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 259;\r\n                this.match(ANTLRv4Parser.BEGIN_ARGUMENT);\r\n                this.state = 263;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.ARGUMENT_CONTENT) {\r\n                    {\r\n                        {\r\n                            this.state = 260;\r\n                            this.match(ANTLRv4Parser.ARGUMENT_CONTENT);\r\n                        }\r\n                    }\r\n                    this.state = 265;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n                this.state = 266;\r\n                this.match(ANTLRv4Parser.END_ARGUMENT);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public modeSpec(): ModeSpecContext {\r\n        let _localctx: ModeSpecContext = new ModeSpecContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 30, ANTLRv4Parser.RULE_modeSpec);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 268;\r\n                this.match(ANTLRv4Parser.MODE);\r\n                this.state = 269;\r\n                this.identifier();\r\n                this.state = 270;\r\n                this.match(ANTLRv4Parser.SEMI);\r\n                this.state = 274;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ANTLRv4Parser.TOKEN_REF) | (1 << ANTLRv4Parser.DOC_COMMENT) | (1 << ANTLRv4Parser.FRAGMENT))) !== 0)) {\r\n                    {\r\n                        {\r\n                            this.state = 271;\r\n                            this.lexerRuleSpec();\r\n                        }\r\n                    }\r\n                    this.state = 276;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public rules(): RulesContext {\r\n        let _localctx: RulesContext = new RulesContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 32, ANTLRv4Parser.RULE_rules);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 280;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ANTLRv4Parser.TOKEN_REF) | (1 << ANTLRv4Parser.RULE_REF) | (1 << ANTLRv4Parser.DOC_COMMENT) | (1 << ANTLRv4Parser.FRAGMENT) | (1 << ANTLRv4Parser.PROTECTED) | (1 << ANTLRv4Parser.PUBLIC) | (1 << ANTLRv4Parser.PRIVATE))) !== 0)) {\r\n                    {\r\n                        {\r\n                            this.state = 277;\r\n                            this.ruleSpec();\r\n                        }\r\n                    }\r\n                    this.state = 282;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public ruleSpec(): RuleSpecContext {\r\n        let _localctx: RuleSpecContext = new RuleSpecContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 34, ANTLRv4Parser.RULE_ruleSpec);\r\n        try {\r\n            this.state = 285;\r\n            this._errHandler.sync(this);\r\n            switch (this.interpreter.adaptivePredict(this._input, 20, this._ctx)) {\r\n                case 1:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 283;\r\n                        this.parserRuleSpec();\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 284;\r\n                        this.lexerRuleSpec();\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public parserRuleSpec(): ParserRuleSpecContext {\r\n        let _localctx: ParserRuleSpecContext = new ParserRuleSpecContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 36, ANTLRv4Parser.RULE_parserRuleSpec);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 290;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.DOC_COMMENT) {\r\n                    {\r\n                        {\r\n                            this.state = 287;\r\n                            this.match(ANTLRv4Parser.DOC_COMMENT);\r\n                        }\r\n                    }\r\n                    this.state = 292;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n                this.state = 294;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ANTLRv4Parser.FRAGMENT) | (1 << ANTLRv4Parser.PROTECTED) | (1 << ANTLRv4Parser.PUBLIC) | (1 << ANTLRv4Parser.PRIVATE))) !== 0)) {\r\n                    {\r\n                        this.state = 293;\r\n                        this.ruleModifiers();\r\n                    }\r\n                }\r\n\r\n                this.state = 296;\r\n                this.match(ANTLRv4Parser.RULE_REF);\r\n                this.state = 298;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if (_la === ANTLRv4Parser.BEGIN_ARGUMENT) {\r\n                    {\r\n                        this.state = 297;\r\n                        this.argActionBlock();\r\n                    }\r\n                }\r\n\r\n                this.state = 301;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if (_la === ANTLRv4Parser.RETURNS) {\r\n                    {\r\n                        this.state = 300;\r\n                        this.ruleReturns();\r\n                    }\r\n                }\r\n\r\n                this.state = 304;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if (_la === ANTLRv4Parser.THROWS) {\r\n                    {\r\n                        this.state = 303;\r\n                        this.throwsSpec();\r\n                    }\r\n                }\r\n\r\n                this.state = 307;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if (_la === ANTLRv4Parser.LOCALS) {\r\n                    {\r\n                        this.state = 306;\r\n                        this.localsSpec();\r\n                    }\r\n                }\r\n\r\n                this.state = 312;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.OPTIONS || _la === ANTLRv4Parser.AT) {\r\n                    {\r\n                        {\r\n                            this.state = 309;\r\n                            this.rulePrequel();\r\n                        }\r\n                    }\r\n                    this.state = 314;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n                this.state = 315;\r\n                this.match(ANTLRv4Parser.COLON);\r\n                this.state = 316;\r\n                this.ruleBlock();\r\n                this.state = 317;\r\n                this.match(ANTLRv4Parser.SEMI);\r\n                this.state = 318;\r\n                this.exceptionGroup();\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public exceptionGroup(): ExceptionGroupContext {\r\n        let _localctx: ExceptionGroupContext = new ExceptionGroupContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 38, ANTLRv4Parser.RULE_exceptionGroup);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 323;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.CATCH) {\r\n                    {\r\n                        {\r\n                            this.state = 320;\r\n                            this.exceptionHandler();\r\n                        }\r\n                    }\r\n                    this.state = 325;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n                this.state = 327;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if (_la === ANTLRv4Parser.FINALLY) {\r\n                    {\r\n                        this.state = 326;\r\n                        this.finallyClause();\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public exceptionHandler(): ExceptionHandlerContext {\r\n        let _localctx: ExceptionHandlerContext = new ExceptionHandlerContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 40, ANTLRv4Parser.RULE_exceptionHandler);\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 329;\r\n                this.match(ANTLRv4Parser.CATCH);\r\n                this.state = 330;\r\n                this.argActionBlock();\r\n                this.state = 331;\r\n                this.actionBlock();\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public finallyClause(): FinallyClauseContext {\r\n        let _localctx: FinallyClauseContext = new FinallyClauseContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 42, ANTLRv4Parser.RULE_finallyClause);\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 333;\r\n                this.match(ANTLRv4Parser.FINALLY);\r\n                this.state = 334;\r\n                this.actionBlock();\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public rulePrequel(): RulePrequelContext {\r\n        let _localctx: RulePrequelContext = new RulePrequelContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 44, ANTLRv4Parser.RULE_rulePrequel);\r\n        try {\r\n            this.state = 338;\r\n            this._errHandler.sync(this);\r\n            switch (this._input.LA(1)) {\r\n                case ANTLRv4Parser.OPTIONS:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 336;\r\n                        this.optionsSpec();\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.AT:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 337;\r\n                        this.ruleAction();\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw new NoViableAltException(this);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public ruleReturns(): RuleReturnsContext {\r\n        let _localctx: RuleReturnsContext = new RuleReturnsContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 46, ANTLRv4Parser.RULE_ruleReturns);\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 340;\r\n                this.match(ANTLRv4Parser.RETURNS);\r\n                this.state = 341;\r\n                this.argActionBlock();\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public throwsSpec(): ThrowsSpecContext {\r\n        let _localctx: ThrowsSpecContext = new ThrowsSpecContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 48, ANTLRv4Parser.RULE_throwsSpec);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 343;\r\n                this.match(ANTLRv4Parser.THROWS);\r\n                this.state = 344;\r\n                this.identifier();\r\n                this.state = 349;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.COMMA) {\r\n                    {\r\n                        {\r\n                            this.state = 345;\r\n                            this.match(ANTLRv4Parser.COMMA);\r\n                            this.state = 346;\r\n                            this.identifier();\r\n                        }\r\n                    }\r\n                    this.state = 351;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public localsSpec(): LocalsSpecContext {\r\n        let _localctx: LocalsSpecContext = new LocalsSpecContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 50, ANTLRv4Parser.RULE_localsSpec);\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 352;\r\n                this.match(ANTLRv4Parser.LOCALS);\r\n                this.state = 353;\r\n                this.argActionBlock();\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public ruleAction(): RuleActionContext {\r\n        let _localctx: RuleActionContext = new RuleActionContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 52, ANTLRv4Parser.RULE_ruleAction);\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 355;\r\n                this.match(ANTLRv4Parser.AT);\r\n                this.state = 356;\r\n                this.identifier();\r\n                this.state = 357;\r\n                this.actionBlock();\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public ruleModifiers(): RuleModifiersContext {\r\n        let _localctx: RuleModifiersContext = new RuleModifiersContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 54, ANTLRv4Parser.RULE_ruleModifiers);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 360;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                do {\r\n                    {\r\n                        {\r\n                            this.state = 359;\r\n                            this.ruleModifier();\r\n                        }\r\n                    }\r\n                    this.state = 362;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                } while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ANTLRv4Parser.FRAGMENT) | (1 << ANTLRv4Parser.PROTECTED) | (1 << ANTLRv4Parser.PUBLIC) | (1 << ANTLRv4Parser.PRIVATE))) !== 0));\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public ruleModifier(): RuleModifierContext {\r\n        let _localctx: RuleModifierContext = new RuleModifierContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 56, ANTLRv4Parser.RULE_ruleModifier);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 364;\r\n                _la = this._input.LA(1);\r\n                if (!((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ANTLRv4Parser.FRAGMENT) | (1 << ANTLRv4Parser.PROTECTED) | (1 << ANTLRv4Parser.PUBLIC) | (1 << ANTLRv4Parser.PRIVATE))) !== 0))) {\r\n                    this._errHandler.recoverInline(this);\r\n                } else {\r\n                    if (this._input.LA(1) === Token.EOF) {\r\n                        this.matchedEOF = true;\r\n                    }\r\n\r\n                    this._errHandler.reportMatch(this);\r\n                    this.consume();\r\n                }\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public ruleBlock(): RuleBlockContext {\r\n        let _localctx: RuleBlockContext = new RuleBlockContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 58, ANTLRv4Parser.RULE_ruleBlock);\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 366;\r\n                this.ruleAltList();\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public ruleAltList(): RuleAltListContext {\r\n        let _localctx: RuleAltListContext = new RuleAltListContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 60, ANTLRv4Parser.RULE_ruleAltList);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 368;\r\n                this.labeledAlt();\r\n                this.state = 373;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.OR) {\r\n                    {\r\n                        {\r\n                            this.state = 369;\r\n                            this.match(ANTLRv4Parser.OR);\r\n                            this.state = 370;\r\n                            this.labeledAlt();\r\n                        }\r\n                    }\r\n                    this.state = 375;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public labeledAlt(): LabeledAltContext {\r\n        let _localctx: LabeledAltContext = new LabeledAltContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 62, ANTLRv4Parser.RULE_labeledAlt);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 376;\r\n                this.alternative();\r\n                this.state = 379;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if (_la === ANTLRv4Parser.POUND) {\r\n                    {\r\n                        this.state = 377;\r\n                        this.match(ANTLRv4Parser.POUND);\r\n                        this.state = 378;\r\n                        this.identifier();\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public lexerRuleSpec(): LexerRuleSpecContext {\r\n        let _localctx: LexerRuleSpecContext = new LexerRuleSpecContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 64, ANTLRv4Parser.RULE_lexerRuleSpec);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 384;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.DOC_COMMENT) {\r\n                    {\r\n                        {\r\n                            this.state = 381;\r\n                            this.match(ANTLRv4Parser.DOC_COMMENT);\r\n                        }\r\n                    }\r\n                    this.state = 386;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n                this.state = 388;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if (_la === ANTLRv4Parser.FRAGMENT) {\r\n                    {\r\n                        this.state = 387;\r\n                        this.match(ANTLRv4Parser.FRAGMENT);\r\n                    }\r\n                }\r\n\r\n                this.state = 390;\r\n                this.match(ANTLRv4Parser.TOKEN_REF);\r\n                this.state = 391;\r\n                this.match(ANTLRv4Parser.COLON);\r\n                this.state = 392;\r\n                this.lexerRuleBlock();\r\n                this.state = 393;\r\n                this.match(ANTLRv4Parser.SEMI);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public lexerRuleBlock(): LexerRuleBlockContext {\r\n        let _localctx: LexerRuleBlockContext = new LexerRuleBlockContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 66, ANTLRv4Parser.RULE_lexerRuleBlock);\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 395;\r\n                this.lexerAltList();\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public lexerAltList(): LexerAltListContext {\r\n        let _localctx: LexerAltListContext = new LexerAltListContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 68, ANTLRv4Parser.RULE_lexerAltList);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 397;\r\n                this.lexerAlt();\r\n                this.state = 402;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.OR) {\r\n                    {\r\n                        {\r\n                            this.state = 398;\r\n                            this.match(ANTLRv4Parser.OR);\r\n                            this.state = 399;\r\n                            this.lexerAlt();\r\n                        }\r\n                    }\r\n                    this.state = 404;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public lexerAlt(): LexerAltContext {\r\n        let _localctx: LexerAltContext = new LexerAltContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 70, ANTLRv4Parser.RULE_lexerAlt);\r\n        let _la: number;\r\n        try {\r\n            this.state = 410;\r\n            this._errHandler.sync(this);\r\n            switch (this._input.LA(1)) {\r\n                case ANTLRv4Parser.TOKEN_REF:\r\n                case ANTLRv4Parser.RULE_REF:\r\n                case ANTLRv4Parser.LEXER_CHAR_SET:\r\n                case ANTLRv4Parser.STRING_LITERAL:\r\n                case ANTLRv4Parser.BEGIN_ACTION:\r\n                case ANTLRv4Parser.LPAREN:\r\n                case ANTLRv4Parser.DOT:\r\n                case ANTLRv4Parser.NOT:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 405;\r\n                        this.lexerElements();\r\n                        this.state = 407;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (_la === ANTLRv4Parser.RARROW) {\r\n                            {\r\n                                this.state = 406;\r\n                                this.lexerCommands();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.SEMI:\r\n                case ANTLRv4Parser.RPAREN:\r\n                case ANTLRv4Parser.OR:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    // tslint:disable-next-line:no-empty\r\n                    {\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw new NoViableAltException(this);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public lexerElements(): LexerElementsContext {\r\n        let _localctx: LexerElementsContext = new LexerElementsContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 72, ANTLRv4Parser.RULE_lexerElements);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 413;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                do {\r\n                    {\r\n                        {\r\n                            this.state = 412;\r\n                            this.lexerElement();\r\n                        }\r\n                    }\r\n                    this.state = 415;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                } while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ANTLRv4Parser.TOKEN_REF) | (1 << ANTLRv4Parser.RULE_REF) | (1 << ANTLRv4Parser.LEXER_CHAR_SET) | (1 << ANTLRv4Parser.STRING_LITERAL) | (1 << ANTLRv4Parser.BEGIN_ACTION))) !== 0) || ((((_la - 33)) & ~0x1F) === 0 && ((1 << (_la - 33)) & ((1 << (ANTLRv4Parser.LPAREN - 33)) | (1 << (ANTLRv4Parser.DOT - 33)) | (1 << (ANTLRv4Parser.NOT - 33)))) !== 0));\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public lexerElement(): LexerElementContext {\r\n        let _localctx: LexerElementContext = new LexerElementContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 74, ANTLRv4Parser.RULE_lexerElement);\r\n        let _la: number;\r\n        try {\r\n            this.state = 433;\r\n            this._errHandler.sync(this);\r\n            switch (this.interpreter.adaptivePredict(this._input, 45, this._ctx)) {\r\n                case 1:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 417;\r\n                        this.labeledLexerElement();\r\n                        this.state = 419;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (((((_la - 41)) & ~0x1F) === 0 && ((1 << (_la - 41)) & ((1 << (ANTLRv4Parser.QUESTION - 41)) | (1 << (ANTLRv4Parser.STAR - 41)) | (1 << (ANTLRv4Parser.PLUS - 41)))) !== 0)) {\r\n                            {\r\n                                this.state = 418;\r\n                                this.ebnfSuffix();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 421;\r\n                        this.lexerAtom();\r\n                        this.state = 423;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (((((_la - 41)) & ~0x1F) === 0 && ((1 << (_la - 41)) & ((1 << (ANTLRv4Parser.QUESTION - 41)) | (1 << (ANTLRv4Parser.STAR - 41)) | (1 << (ANTLRv4Parser.PLUS - 41)))) !== 0)) {\r\n                            {\r\n                                this.state = 422;\r\n                                this.ebnfSuffix();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n\r\n                case 3:\r\n                    this.enterOuterAlt(_localctx, 3);\r\n                    {\r\n                        this.state = 425;\r\n                        this.lexerBlock();\r\n                        this.state = 427;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (((((_la - 41)) & ~0x1F) === 0 && ((1 << (_la - 41)) & ((1 << (ANTLRv4Parser.QUESTION - 41)) | (1 << (ANTLRv4Parser.STAR - 41)) | (1 << (ANTLRv4Parser.PLUS - 41)))) !== 0)) {\r\n                            {\r\n                                this.state = 426;\r\n                                this.ebnfSuffix();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n\r\n                case 4:\r\n                    this.enterOuterAlt(_localctx, 4);\r\n                    {\r\n                        this.state = 429;\r\n                        this.actionBlock();\r\n                        this.state = 431;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (_la === ANTLRv4Parser.QUESTION) {\r\n                            {\r\n                                this.state = 430;\r\n                                this.match(ANTLRv4Parser.QUESTION);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public labeledLexerElement(): LabeledLexerElementContext {\r\n        let _localctx: LabeledLexerElementContext = new LabeledLexerElementContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 76, ANTLRv4Parser.RULE_labeledLexerElement);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 435;\r\n                this.identifier();\r\n                this.state = 436;\r\n                _la = this._input.LA(1);\r\n                if (!(_la === ANTLRv4Parser.ASSIGN || _la === ANTLRv4Parser.PLUS_ASSIGN)) {\r\n                    this._errHandler.recoverInline(this);\r\n                } else {\r\n                    if (this._input.LA(1) === Token.EOF) {\r\n                        this.matchedEOF = true;\r\n                    }\r\n\r\n                    this._errHandler.reportMatch(this);\r\n                    this.consume();\r\n                }\r\n                this.state = 439;\r\n                this._errHandler.sync(this);\r\n                switch (this._input.LA(1)) {\r\n                    case ANTLRv4Parser.TOKEN_REF:\r\n                    case ANTLRv4Parser.LEXER_CHAR_SET:\r\n                    case ANTLRv4Parser.STRING_LITERAL:\r\n                    case ANTLRv4Parser.DOT:\r\n                    case ANTLRv4Parser.NOT:\r\n                        {\r\n                            this.state = 437;\r\n                            this.lexerAtom();\r\n                        }\r\n                        break;\r\n                    case ANTLRv4Parser.LPAREN:\r\n                        {\r\n                            this.state = 438;\r\n                            this.block();\r\n                        }\r\n                        break;\r\n                    default:\r\n                        throw new NoViableAltException(this);\r\n                }\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public lexerBlock(): LexerBlockContext {\r\n        let _localctx: LexerBlockContext = new LexerBlockContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 78, ANTLRv4Parser.RULE_lexerBlock);\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 441;\r\n                this.match(ANTLRv4Parser.LPAREN);\r\n                this.state = 442;\r\n                this.lexerAltList();\r\n                this.state = 443;\r\n                this.match(ANTLRv4Parser.RPAREN);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public lexerCommands(): LexerCommandsContext {\r\n        let _localctx: LexerCommandsContext = new LexerCommandsContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 80, ANTLRv4Parser.RULE_lexerCommands);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 445;\r\n                this.match(ANTLRv4Parser.RARROW);\r\n                this.state = 446;\r\n                this.lexerCommand();\r\n                this.state = 451;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.COMMA) {\r\n                    {\r\n                        {\r\n                            this.state = 447;\r\n                            this.match(ANTLRv4Parser.COMMA);\r\n                            this.state = 448;\r\n                            this.lexerCommand();\r\n                        }\r\n                    }\r\n                    this.state = 453;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public lexerCommand(): LexerCommandContext {\r\n        let _localctx: LexerCommandContext = new LexerCommandContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 82, ANTLRv4Parser.RULE_lexerCommand);\r\n        try {\r\n            this.state = 460;\r\n            this._errHandler.sync(this);\r\n            switch (this.interpreter.adaptivePredict(this._input, 48, this._ctx)) {\r\n                case 1:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 454;\r\n                        this.lexerCommandName();\r\n                        this.state = 455;\r\n                        this.match(ANTLRv4Parser.LPAREN);\r\n                        this.state = 456;\r\n                        this.lexerCommandExpr();\r\n                        this.state = 457;\r\n                        this.match(ANTLRv4Parser.RPAREN);\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 459;\r\n                        this.lexerCommandName();\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public lexerCommandName(): LexerCommandNameContext {\r\n        let _localctx: LexerCommandNameContext = new LexerCommandNameContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 84, ANTLRv4Parser.RULE_lexerCommandName);\r\n        try {\r\n            this.state = 464;\r\n            this._errHandler.sync(this);\r\n            switch (this._input.LA(1)) {\r\n                case ANTLRv4Parser.TOKEN_REF:\r\n                case ANTLRv4Parser.RULE_REF:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 462;\r\n                        this.identifier();\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.MODE:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 463;\r\n                        this.match(ANTLRv4Parser.MODE);\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw new NoViableAltException(this);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public lexerCommandExpr(): LexerCommandExprContext {\r\n        let _localctx: LexerCommandExprContext = new LexerCommandExprContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 86, ANTLRv4Parser.RULE_lexerCommandExpr);\r\n        try {\r\n            this.state = 468;\r\n            this._errHandler.sync(this);\r\n            switch (this._input.LA(1)) {\r\n                case ANTLRv4Parser.TOKEN_REF:\r\n                case ANTLRv4Parser.RULE_REF:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 466;\r\n                        this.identifier();\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.INT:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 467;\r\n                        this.match(ANTLRv4Parser.INT);\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw new NoViableAltException(this);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public altList(): AltListContext {\r\n        let _localctx: AltListContext = new AltListContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 88, ANTLRv4Parser.RULE_altList);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 470;\r\n                this.alternative();\r\n                this.state = 475;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.OR) {\r\n                    {\r\n                        {\r\n                            this.state = 471;\r\n                            this.match(ANTLRv4Parser.OR);\r\n                            this.state = 472;\r\n                            this.alternative();\r\n                        }\r\n                    }\r\n                    this.state = 477;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public alternative(): AlternativeContext {\r\n        let _localctx: AlternativeContext = new AlternativeContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 90, ANTLRv4Parser.RULE_alternative);\r\n        let _la: number;\r\n        try {\r\n            this.state = 487;\r\n            this._errHandler.sync(this);\r\n            switch (this._input.LA(1)) {\r\n                case ANTLRv4Parser.TOKEN_REF:\r\n                case ANTLRv4Parser.RULE_REF:\r\n                case ANTLRv4Parser.STRING_LITERAL:\r\n                case ANTLRv4Parser.BEGIN_ACTION:\r\n                case ANTLRv4Parser.LPAREN:\r\n                case ANTLRv4Parser.LT:\r\n                case ANTLRv4Parser.DOT:\r\n                case ANTLRv4Parser.NOT:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 479;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (_la === ANTLRv4Parser.LT) {\r\n                            {\r\n                                this.state = 478;\r\n                                this.elementOptions();\r\n                            }\r\n                        }\r\n\r\n                        this.state = 482;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        do {\r\n                            {\r\n                                {\r\n                                    this.state = 481;\r\n                                    this.element();\r\n                                }\r\n                            }\r\n                            this.state = 484;\r\n                            this._errHandler.sync(this);\r\n                            _la = this._input.LA(1);\r\n                        } while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ANTLRv4Parser.TOKEN_REF) | (1 << ANTLRv4Parser.RULE_REF) | (1 << ANTLRv4Parser.STRING_LITERAL) | (1 << ANTLRv4Parser.BEGIN_ACTION))) !== 0) || ((((_la - 33)) & ~0x1F) === 0 && ((1 << (_la - 33)) & ((1 << (ANTLRv4Parser.LPAREN - 33)) | (1 << (ANTLRv4Parser.DOT - 33)) | (1 << (ANTLRv4Parser.NOT - 33)))) !== 0));\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.SEMI:\r\n                case ANTLRv4Parser.RPAREN:\r\n                case ANTLRv4Parser.OR:\r\n                case ANTLRv4Parser.POUND:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    // tslint:disable-next-line:no-empty\r\n                    {\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw new NoViableAltException(this);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public element(): ElementContext {\r\n        let _localctx: ElementContext = new ElementContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 92, ANTLRv4Parser.RULE_element);\r\n        let _la: number;\r\n        try {\r\n            this.state = 504;\r\n            this._errHandler.sync(this);\r\n            switch (this.interpreter.adaptivePredict(this._input, 58, this._ctx)) {\r\n                case 1:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 489;\r\n                        this.labeledElement();\r\n                        this.state = 492;\r\n                        this._errHandler.sync(this);\r\n                        switch (this._input.LA(1)) {\r\n                            case ANTLRv4Parser.QUESTION:\r\n                            case ANTLRv4Parser.STAR:\r\n                            case ANTLRv4Parser.PLUS:\r\n                                {\r\n                                    this.state = 490;\r\n                                    this.ebnfSuffix();\r\n                                }\r\n                                break;\r\n                            case ANTLRv4Parser.TOKEN_REF:\r\n                            case ANTLRv4Parser.RULE_REF:\r\n                            case ANTLRv4Parser.STRING_LITERAL:\r\n                            case ANTLRv4Parser.BEGIN_ACTION:\r\n                            case ANTLRv4Parser.SEMI:\r\n                            case ANTLRv4Parser.LPAREN:\r\n                            case ANTLRv4Parser.RPAREN:\r\n                            case ANTLRv4Parser.OR:\r\n                            case ANTLRv4Parser.DOT:\r\n                            case ANTLRv4Parser.POUND:\r\n                            case ANTLRv4Parser.NOT:\r\n                                // tslint:disable-next-line:no-empty\r\n                                {\r\n                                }\r\n                                break;\r\n                            default:\r\n                                throw new NoViableAltException(this);\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 494;\r\n                        this.atom();\r\n                        this.state = 497;\r\n                        this._errHandler.sync(this);\r\n                        switch (this._input.LA(1)) {\r\n                            case ANTLRv4Parser.QUESTION:\r\n                            case ANTLRv4Parser.STAR:\r\n                            case ANTLRv4Parser.PLUS:\r\n                                {\r\n                                    this.state = 495;\r\n                                    this.ebnfSuffix();\r\n                                }\r\n                                break;\r\n                            case ANTLRv4Parser.TOKEN_REF:\r\n                            case ANTLRv4Parser.RULE_REF:\r\n                            case ANTLRv4Parser.STRING_LITERAL:\r\n                            case ANTLRv4Parser.BEGIN_ACTION:\r\n                            case ANTLRv4Parser.SEMI:\r\n                            case ANTLRv4Parser.LPAREN:\r\n                            case ANTLRv4Parser.RPAREN:\r\n                            case ANTLRv4Parser.OR:\r\n                            case ANTLRv4Parser.DOT:\r\n                            case ANTLRv4Parser.POUND:\r\n                            case ANTLRv4Parser.NOT:\r\n                                // tslint:disable-next-line:no-empty\r\n                                {\r\n                                }\r\n                                break;\r\n                            default:\r\n                                throw new NoViableAltException(this);\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case 3:\r\n                    this.enterOuterAlt(_localctx, 3);\r\n                    {\r\n                        this.state = 499;\r\n                        this.ebnf();\r\n                    }\r\n                    break;\r\n\r\n                case 4:\r\n                    this.enterOuterAlt(_localctx, 4);\r\n                    {\r\n                        this.state = 500;\r\n                        this.actionBlock();\r\n                        this.state = 502;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (_la === ANTLRv4Parser.QUESTION) {\r\n                            {\r\n                                this.state = 501;\r\n                                this.match(ANTLRv4Parser.QUESTION);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public labeledElement(): LabeledElementContext {\r\n        let _localctx: LabeledElementContext = new LabeledElementContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 94, ANTLRv4Parser.RULE_labeledElement);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 506;\r\n                this.identifier();\r\n                this.state = 507;\r\n                _la = this._input.LA(1);\r\n                if (!(_la === ANTLRv4Parser.ASSIGN || _la === ANTLRv4Parser.PLUS_ASSIGN)) {\r\n                    this._errHandler.recoverInline(this);\r\n                } else {\r\n                    if (this._input.LA(1) === Token.EOF) {\r\n                        this.matchedEOF = true;\r\n                    }\r\n\r\n                    this._errHandler.reportMatch(this);\r\n                    this.consume();\r\n                }\r\n                this.state = 510;\r\n                this._errHandler.sync(this);\r\n                switch (this._input.LA(1)) {\r\n                    case ANTLRv4Parser.TOKEN_REF:\r\n                    case ANTLRv4Parser.RULE_REF:\r\n                    case ANTLRv4Parser.STRING_LITERAL:\r\n                    case ANTLRv4Parser.DOT:\r\n                    case ANTLRv4Parser.NOT:\r\n                        {\r\n                            this.state = 508;\r\n                            this.atom();\r\n                        }\r\n                        break;\r\n                    case ANTLRv4Parser.LPAREN:\r\n                        {\r\n                            this.state = 509;\r\n                            this.block();\r\n                        }\r\n                        break;\r\n                    default:\r\n                        throw new NoViableAltException(this);\r\n                }\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public ebnf(): EbnfContext {\r\n        let _localctx: EbnfContext = new EbnfContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 96, ANTLRv4Parser.RULE_ebnf);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 512;\r\n                this.block();\r\n                this.state = 514;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if (((((_la - 41)) & ~0x1F) === 0 && ((1 << (_la - 41)) & ((1 << (ANTLRv4Parser.QUESTION - 41)) | (1 << (ANTLRv4Parser.STAR - 41)) | (1 << (ANTLRv4Parser.PLUS - 41)))) !== 0)) {\r\n                    {\r\n                        this.state = 513;\r\n                        this.blockSuffix();\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public blockSuffix(): BlockSuffixContext {\r\n        let _localctx: BlockSuffixContext = new BlockSuffixContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 98, ANTLRv4Parser.RULE_blockSuffix);\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 516;\r\n                this.ebnfSuffix();\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public ebnfSuffix(): EbnfSuffixContext {\r\n        let _localctx: EbnfSuffixContext = new EbnfSuffixContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 100, ANTLRv4Parser.RULE_ebnfSuffix);\r\n        let _la: number;\r\n        try {\r\n            this.state = 530;\r\n            this._errHandler.sync(this);\r\n            switch (this._input.LA(1)) {\r\n                case ANTLRv4Parser.QUESTION:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 518;\r\n                        this.match(ANTLRv4Parser.QUESTION);\r\n                        this.state = 520;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (_la === ANTLRv4Parser.QUESTION) {\r\n                            {\r\n                                this.state = 519;\r\n                                this.match(ANTLRv4Parser.QUESTION);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.STAR:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 522;\r\n                        this.match(ANTLRv4Parser.STAR);\r\n                        this.state = 524;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (_la === ANTLRv4Parser.QUESTION) {\r\n                            {\r\n                                this.state = 523;\r\n                                this.match(ANTLRv4Parser.QUESTION);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.PLUS:\r\n                    this.enterOuterAlt(_localctx, 3);\r\n                    {\r\n                        this.state = 526;\r\n                        this.match(ANTLRv4Parser.PLUS);\r\n                        this.state = 528;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (_la === ANTLRv4Parser.QUESTION) {\r\n                            {\r\n                                this.state = 527;\r\n                                this.match(ANTLRv4Parser.QUESTION);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw new NoViableAltException(this);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public lexerAtom(): LexerAtomContext {\r\n        let _localctx: LexerAtomContext = new LexerAtomContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 102, ANTLRv4Parser.RULE_lexerAtom);\r\n        let _la: number;\r\n        try {\r\n            this.state = 540;\r\n            this._errHandler.sync(this);\r\n            switch (this.interpreter.adaptivePredict(this._input, 66, this._ctx)) {\r\n                case 1:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 532;\r\n                        this.characterRange();\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 533;\r\n                        this.terminalRule();\r\n                    }\r\n                    break;\r\n\r\n                case 3:\r\n                    this.enterOuterAlt(_localctx, 3);\r\n                    {\r\n                        this.state = 534;\r\n                        this.notSet();\r\n                    }\r\n                    break;\r\n\r\n                case 4:\r\n                    this.enterOuterAlt(_localctx, 4);\r\n                    {\r\n                        this.state = 535;\r\n                        this.match(ANTLRv4Parser.LEXER_CHAR_SET);\r\n                    }\r\n                    break;\r\n\r\n                case 5:\r\n                    this.enterOuterAlt(_localctx, 5);\r\n                    {\r\n                        this.state = 536;\r\n                        this.match(ANTLRv4Parser.DOT);\r\n                        this.state = 538;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (_la === ANTLRv4Parser.LT) {\r\n                            {\r\n                                this.state = 537;\r\n                                this.elementOptions();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public atom(): AtomContext {\r\n        let _localctx: AtomContext = new AtomContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 104, ANTLRv4Parser.RULE_atom);\r\n        let _la: number;\r\n        try {\r\n            this.state = 550;\r\n            this._errHandler.sync(this);\r\n            switch (this.interpreter.adaptivePredict(this._input, 68, this._ctx)) {\r\n                case 1:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 542;\r\n                        this.characterRange();\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 543;\r\n                        this.terminalRule();\r\n                    }\r\n                    break;\r\n\r\n                case 3:\r\n                    this.enterOuterAlt(_localctx, 3);\r\n                    {\r\n                        this.state = 544;\r\n                        this.ruleref();\r\n                    }\r\n                    break;\r\n\r\n                case 4:\r\n                    this.enterOuterAlt(_localctx, 4);\r\n                    {\r\n                        this.state = 545;\r\n                        this.notSet();\r\n                    }\r\n                    break;\r\n\r\n                case 5:\r\n                    this.enterOuterAlt(_localctx, 5);\r\n                    {\r\n                        this.state = 546;\r\n                        this.match(ANTLRv4Parser.DOT);\r\n                        this.state = 548;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (_la === ANTLRv4Parser.LT) {\r\n                            {\r\n                                this.state = 547;\r\n                                this.elementOptions();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public notSet(): NotSetContext {\r\n        let _localctx: NotSetContext = new NotSetContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 106, ANTLRv4Parser.RULE_notSet);\r\n        try {\r\n            this.state = 556;\r\n            this._errHandler.sync(this);\r\n            switch (this.interpreter.adaptivePredict(this._input, 69, this._ctx)) {\r\n                case 1:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 552;\r\n                        this.match(ANTLRv4Parser.NOT);\r\n                        this.state = 553;\r\n                        this.setElement();\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 554;\r\n                        this.match(ANTLRv4Parser.NOT);\r\n                        this.state = 555;\r\n                        this.blockSet();\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public blockSet(): BlockSetContext {\r\n        let _localctx: BlockSetContext = new BlockSetContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 108, ANTLRv4Parser.RULE_blockSet);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 558;\r\n                this.match(ANTLRv4Parser.LPAREN);\r\n                this.state = 559;\r\n                this.setElement();\r\n                this.state = 564;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.OR) {\r\n                    {\r\n                        {\r\n                            this.state = 560;\r\n                            this.match(ANTLRv4Parser.OR);\r\n                            this.state = 561;\r\n                            this.setElement();\r\n                        }\r\n                    }\r\n                    this.state = 566;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n                this.state = 567;\r\n                this.match(ANTLRv4Parser.RPAREN);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public setElement(): SetElementContext {\r\n        let _localctx: SetElementContext = new SetElementContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 110, ANTLRv4Parser.RULE_setElement);\r\n        let _la: number;\r\n        try {\r\n            this.state = 579;\r\n            this._errHandler.sync(this);\r\n            switch (this.interpreter.adaptivePredict(this._input, 73, this._ctx)) {\r\n                case 1:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 569;\r\n                        this.match(ANTLRv4Parser.TOKEN_REF);\r\n                        this.state = 571;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (_la === ANTLRv4Parser.LT) {\r\n                            {\r\n                                this.state = 570;\r\n                                this.elementOptions();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 573;\r\n                        this.match(ANTLRv4Parser.STRING_LITERAL);\r\n                        this.state = 575;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (_la === ANTLRv4Parser.LT) {\r\n                            {\r\n                                this.state = 574;\r\n                                this.elementOptions();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n\r\n                case 3:\r\n                    this.enterOuterAlt(_localctx, 3);\r\n                    {\r\n                        this.state = 577;\r\n                        this.characterRange();\r\n                    }\r\n                    break;\r\n\r\n                case 4:\r\n                    this.enterOuterAlt(_localctx, 4);\r\n                    {\r\n                        this.state = 578;\r\n                        this.match(ANTLRv4Parser.LEXER_CHAR_SET);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public block(): BlockContext {\r\n        let _localctx: BlockContext = new BlockContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 112, ANTLRv4Parser.RULE_block);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 581;\r\n                this.match(ANTLRv4Parser.LPAREN);\r\n                this.state = 592;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if (_la === ANTLRv4Parser.OPTIONS || _la === ANTLRv4Parser.COLON || _la === ANTLRv4Parser.AT) {\r\n                    {\r\n                        this.state = 583;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (_la === ANTLRv4Parser.OPTIONS) {\r\n                            {\r\n                                this.state = 582;\r\n                                this.optionsSpec();\r\n                            }\r\n                        }\r\n\r\n                        this.state = 588;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        while (_la === ANTLRv4Parser.AT) {\r\n                            {\r\n                                {\r\n                                    this.state = 585;\r\n                                    this.ruleAction();\r\n                                }\r\n                            }\r\n                            this.state = 590;\r\n                            this._errHandler.sync(this);\r\n                            _la = this._input.LA(1);\r\n                        }\r\n                        this.state = 591;\r\n                        this.match(ANTLRv4Parser.COLON);\r\n                    }\r\n                }\r\n\r\n                this.state = 594;\r\n                this.altList();\r\n                this.state = 595;\r\n                this.match(ANTLRv4Parser.RPAREN);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public ruleref(): RulerefContext {\r\n        let _localctx: RulerefContext = new RulerefContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 114, ANTLRv4Parser.RULE_ruleref);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 597;\r\n                this.match(ANTLRv4Parser.RULE_REF);\r\n                this.state = 599;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if (_la === ANTLRv4Parser.BEGIN_ARGUMENT) {\r\n                    {\r\n                        this.state = 598;\r\n                        this.argActionBlock();\r\n                    }\r\n                }\r\n\r\n                this.state = 602;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if (_la === ANTLRv4Parser.LT) {\r\n                    {\r\n                        this.state = 601;\r\n                        this.elementOptions();\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public characterRange(): CharacterRangeContext {\r\n        let _localctx: CharacterRangeContext = new CharacterRangeContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 116, ANTLRv4Parser.RULE_characterRange);\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 604;\r\n                this.match(ANTLRv4Parser.STRING_LITERAL);\r\n                this.state = 605;\r\n                this.match(ANTLRv4Parser.RANGE);\r\n                this.state = 606;\r\n                this.match(ANTLRv4Parser.STRING_LITERAL);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public terminalRule(): TerminalRuleContext {\r\n        let _localctx: TerminalRuleContext = new TerminalRuleContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 118, ANTLRv4Parser.RULE_terminalRule);\r\n        let _la: number;\r\n        try {\r\n            this.state = 616;\r\n            this._errHandler.sync(this);\r\n            switch (this._input.LA(1)) {\r\n                case ANTLRv4Parser.TOKEN_REF:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 608;\r\n                        this.match(ANTLRv4Parser.TOKEN_REF);\r\n                        this.state = 610;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (_la === ANTLRv4Parser.LT) {\r\n                            {\r\n                                this.state = 609;\r\n                                this.elementOptions();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n                case ANTLRv4Parser.STRING_LITERAL:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 612;\r\n                        this.match(ANTLRv4Parser.STRING_LITERAL);\r\n                        this.state = 614;\r\n                        this._errHandler.sync(this);\r\n                        _la = this._input.LA(1);\r\n                        if (_la === ANTLRv4Parser.LT) {\r\n                            {\r\n                                this.state = 613;\r\n                                this.elementOptions();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw new NoViableAltException(this);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public elementOptions(): ElementOptionsContext {\r\n        let _localctx: ElementOptionsContext = new ElementOptionsContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 120, ANTLRv4Parser.RULE_elementOptions);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 618;\r\n                this.match(ANTLRv4Parser.LT);\r\n                this.state = 619;\r\n                this.elementOption();\r\n                this.state = 624;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                while (_la === ANTLRv4Parser.COMMA) {\r\n                    {\r\n                        {\r\n                            this.state = 620;\r\n                            this.match(ANTLRv4Parser.COMMA);\r\n                            this.state = 621;\r\n                            this.elementOption();\r\n                        }\r\n                    }\r\n                    this.state = 626;\r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                }\r\n                this.state = 627;\r\n                this.match(ANTLRv4Parser.GT);\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public elementOption(): ElementOptionContext {\r\n        let _localctx: ElementOptionContext = new ElementOptionContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 122, ANTLRv4Parser.RULE_elementOption);\r\n        try {\r\n            this.state = 636;\r\n            this._errHandler.sync(this);\r\n            switch (this.interpreter.adaptivePredict(this._input, 84, this._ctx)) {\r\n                case 1:\r\n                    this.enterOuterAlt(_localctx, 1);\r\n                    {\r\n                        this.state = 629;\r\n                        this.identifier();\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    this.enterOuterAlt(_localctx, 2);\r\n                    {\r\n                        this.state = 630;\r\n                        this.identifier();\r\n                        this.state = 631;\r\n                        this.match(ANTLRv4Parser.ASSIGN);\r\n                        this.state = 634;\r\n                        this._errHandler.sync(this);\r\n                        switch (this._input.LA(1)) {\r\n                            case ANTLRv4Parser.TOKEN_REF:\r\n                            case ANTLRv4Parser.RULE_REF:\r\n                                {\r\n                                    this.state = 632;\r\n                                    this.identifier();\r\n                                }\r\n                                break;\r\n                            case ANTLRv4Parser.STRING_LITERAL:\r\n                                {\r\n                                    this.state = 633;\r\n                                    this.match(ANTLRv4Parser.STRING_LITERAL);\r\n                                }\r\n                                break;\r\n                            default:\r\n                                throw new NoViableAltException(this);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n    // @RuleVersion(0)\r\n    public identifier(): IdentifierContext {\r\n        let _localctx: IdentifierContext = new IdentifierContext(this._ctx, this.state);\r\n        this.enterRule(_localctx, 124, ANTLRv4Parser.RULE_identifier);\r\n        let _la: number;\r\n        try {\r\n            this.enterOuterAlt(_localctx, 1);\r\n            {\r\n                this.state = 638;\r\n                _la = this._input.LA(1);\r\n                if (!(_la === ANTLRv4Parser.TOKEN_REF || _la === ANTLRv4Parser.RULE_REF)) {\r\n                    this._errHandler.recoverInline(this);\r\n                } else {\r\n                    if (this._input.LA(1) === Token.EOF) {\r\n                        this.matchedEOF = true;\r\n                    }\r\n\r\n                    this._errHandler.reportMatch(this);\r\n                    this.consume();\r\n                }\r\n            }\r\n        }\r\n        catch (re) {\r\n            if (re instanceof RecognitionException) {\r\n                _localctx.exception = re;\r\n                this._errHandler.reportError(this, re);\r\n                this._errHandler.recover(this, re);\r\n            } else {\r\n                throw re;\r\n            }\r\n        }\r\n        finally {\r\n            this.exitRule();\r\n        }\r\n        return _localctx;\r\n    }\r\n\r\n    private static readonly _serializedATNSegments: number = 2;\r\n    private static readonly _serializedATNSegment0: string =\r\n        \"\\x03\\uC91D\\uCABA\\u058D\\uAFBA\\u4F53\\u0607\\uEA8B\\uC241\\x03>\\u0283\\x04\\x02\" +\r\n        \"\\t\\x02\\x04\\x03\\t\\x03\\x04\\x04\\t\\x04\\x04\\x05\\t\\x05\\x04\\x06\\t\\x06\\x04\\x07\" +\r\n        \"\\t\\x07\\x04\\b\\t\\b\\x04\\t\\t\\t\\x04\\n\\t\\n\\x04\\v\\t\\v\\x04\\f\\t\\f\\x04\\r\\t\\r\\x04\" +\r\n        \"\\x0E\\t\\x0E\\x04\\x0F\\t\\x0F\\x04\\x10\\t\\x10\\x04\\x11\\t\\x11\\x04\\x12\\t\\x12\\x04\" +\r\n        \"\\x13\\t\\x13\\x04\\x14\\t\\x14\\x04\\x15\\t\\x15\\x04\\x16\\t\\x16\\x04\\x17\\t\\x17\\x04\" +\r\n        \"\\x18\\t\\x18\\x04\\x19\\t\\x19\\x04\\x1A\\t\\x1A\\x04\\x1B\\t\\x1B\\x04\\x1C\\t\\x1C\\x04\" +\r\n        \"\\x1D\\t\\x1D\\x04\\x1E\\t\\x1E\\x04\\x1F\\t\\x1F\\x04 \\t \\x04!\\t!\\x04\\\"\\t\\\"\\x04#\" +\r\n        \"\\t#\\x04$\\t$\\x04%\\t%\\x04&\\t&\\x04\\'\\t\\'\\x04(\\t(\\x04)\\t)\\x04*\\t*\\x04+\\t+\" +\r\n        \"\\x04,\\t,\\x04-\\t-\\x04.\\t.\\x04/\\t/\\x040\\t0\\x041\\t1\\x042\\t2\\x043\\t3\\x044\" +\r\n        \"\\t4\\x045\\t5\\x046\\t6\\x047\\t7\\x048\\t8\\x049\\t9\\x04:\\t:\\x04;\\t;\\x04<\\t<\\x04\" +\r\n        \"=\\t=\\x04>\\t>\\x04?\\t?\\x04@\\t@\\x03\\x02\\x07\\x02\\x82\\n\\x02\\f\\x02\\x0E\\x02\\x85\" +\r\n        \"\\v\\x02\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x02\\x07\\x02\\x8B\\n\\x02\\f\\x02\\x0E\\x02\" +\r\n        \"\\x8E\\v\\x02\\x03\\x02\\x03\\x02\\x07\\x02\\x92\\n\\x02\\f\\x02\\x0E\\x02\\x95\\v\\x02\\x03\" +\r\n        \"\\x02\\x03\\x02\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x05\\x03\\x9E\\n\\x03\" +\r\n        \"\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x05\\x04\\xA5\\n\\x04\\x03\\x05\\x03\" +\r\n        \"\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x07\\x05\\xAC\\n\\x05\\f\\x05\\x0E\\x05\\xAF\\v\\x05\" +\r\n        \"\\x03\\x05\\x03\\x05\\x03\\x06\\x03\\x06\\x03\\x06\\x03\\x06\\x03\\x07\\x03\\x07\\x03\\x07\" +\r\n        \"\\x07\\x07\\xBA\\n\\x07\\f\\x07\\x0E\\x07\\xBD\\v\\x07\\x03\\x07\\x03\\x07\\x03\\x07\\x05\" +\r\n        \"\\x07\\xC2\\n\\x07\\x03\\b\\x03\\b\\x03\\b\\x03\\b\\x07\\b\\xC8\\n\\b\\f\\b\\x0E\\b\\xCB\\v\\b\" +\r\n        \"\\x03\\b\\x03\\b\\x03\\t\\x03\\t\\x03\\t\\x03\\t\\x03\\t\\x05\\t\\xD4\\n\\t\\x03\\n\\x03\\n\\x03\" +\r\n        \"\\n\\x05\\n\\xD9\\n\\n\\x03\\n\\x03\\n\\x03\\v\\x03\\v\\x03\\v\\x05\\v\\xE0\\n\\v\\x03\\v\\x03\" +\r\n        \"\\v\\x03\\f\\x03\\f\\x03\\f\\x07\\f\\xE7\\n\\f\\f\\f\\x0E\\f\\xEA\\v\\f\\x03\\f\\x05\\f\\xED\\n\" +\r\n        \"\\f\\x03\\r\\x03\\r\\x03\\r\\x03\\r\\x05\\r\\xF3\\n\\r\\x03\\r\\x03\\r\\x03\\r\\x03\\x0E\\x03\" +\r\n        \"\\x0E\\x03\\x0E\\x05\\x0E\\xFB\\n\\x0E\\x03\\x0F\\x03\\x0F\\x07\\x0F\\xFF\\n\\x0F\\f\\x0F\" +\r\n        \"\\x0E\\x0F\\u0102\\v\\x0F\\x03\\x0F\\x03\\x0F\\x03\\x10\\x03\\x10\\x07\\x10\\u0108\\n\\x10\" +\r\n        \"\\f\\x10\\x0E\\x10\\u010B\\v\\x10\\x03\\x10\\x03\\x10\\x03\\x11\\x03\\x11\\x03\\x11\\x03\" +\r\n        \"\\x11\\x07\\x11\\u0113\\n\\x11\\f\\x11\\x0E\\x11\\u0116\\v\\x11\\x03\\x12\\x07\\x12\\u0119\" +\r\n        \"\\n\\x12\\f\\x12\\x0E\\x12\\u011C\\v\\x12\\x03\\x13\\x03\\x13\\x05\\x13\\u0120\\n\\x13\\x03\" +\r\n        \"\\x14\\x07\\x14\\u0123\\n\\x14\\f\\x14\\x0E\\x14\\u0126\\v\\x14\\x03\\x14\\x05\\x14\\u0129\" +\r\n        \"\\n\\x14\\x03\\x14\\x03\\x14\\x05\\x14\\u012D\\n\\x14\\x03\\x14\\x05\\x14\\u0130\\n\\x14\" +\r\n        \"\\x03\\x14\\x05\\x14\\u0133\\n\\x14\\x03\\x14\\x05\\x14\\u0136\\n\\x14\\x03\\x14\\x07\\x14\" +\r\n        \"\\u0139\\n\\x14\\f\\x14\\x0E\\x14\\u013C\\v\\x14\\x03\\x14\\x03\\x14\\x03\\x14\\x03\\x14\" +\r\n        \"\\x03\\x14\\x03\\x15\\x07\\x15\\u0144\\n\\x15\\f\\x15\\x0E\\x15\\u0147\\v\\x15\\x03\\x15\" +\r\n        \"\\x05\\x15\\u014A\\n\\x15\\x03\\x16\\x03\\x16\\x03\\x16\\x03\\x16\\x03\\x17\\x03\\x17\\x03\" +\r\n        \"\\x17\\x03\\x18\\x03\\x18\\x05\\x18\\u0155\\n\\x18\\x03\\x19\\x03\\x19\\x03\\x19\\x03\\x1A\" +\r\n        \"\\x03\\x1A\\x03\\x1A\\x03\\x1A\\x07\\x1A\\u015E\\n\\x1A\\f\\x1A\\x0E\\x1A\\u0161\\v\\x1A\" +\r\n        \"\\x03\\x1B\\x03\\x1B\\x03\\x1B\\x03\\x1C\\x03\\x1C\\x03\\x1C\\x03\\x1C\\x03\\x1D\\x06\\x1D\" +\r\n        \"\\u016B\\n\\x1D\\r\\x1D\\x0E\\x1D\\u016C\\x03\\x1E\\x03\\x1E\\x03\\x1F\\x03\\x1F\\x03 \" +\r\n        \"\\x03 \\x03 \\x07 \\u0176\\n \\f \\x0E \\u0179\\v \\x03!\\x03!\\x03!\\x05!\\u017E\\n\" +\r\n        \"!\\x03\\\"\\x07\\\"\\u0181\\n\\\"\\f\\\"\\x0E\\\"\\u0184\\v\\\"\\x03\\\"\\x05\\\"\\u0187\\n\\\"\\x03\" +\r\n        \"\\\"\\x03\\\"\\x03\\\"\\x03\\\"\\x03\\\"\\x03#\\x03#\\x03$\\x03$\\x03$\\x07$\\u0193\\n$\\f$\\x0E\" +\r\n        \"$\\u0196\\v$\\x03%\\x03%\\x05%\\u019A\\n%\\x03%\\x05%\\u019D\\n%\\x03&\\x06&\\u01A0\" +\r\n        \"\\n&\\r&\\x0E&\\u01A1\\x03\\'\\x03\\'\\x05\\'\\u01A6\\n\\'\\x03\\'\\x03\\'\\x05\\'\\u01AA\" +\r\n        \"\\n\\'\\x03\\'\\x03\\'\\x05\\'\\u01AE\\n\\'\\x03\\'\\x03\\'\\x05\\'\\u01B2\\n\\'\\x05\\'\\u01B4\" +\r\n        \"\\n\\'\\x03(\\x03(\\x03(\\x03(\\x05(\\u01BA\\n(\\x03)\\x03)\\x03)\\x03)\\x03*\\x03*\\x03\" +\r\n        \"*\\x03*\\x07*\\u01C4\\n*\\f*\\x0E*\\u01C7\\v*\\x03+\\x03+\\x03+\\x03+\\x03+\\x03+\\x05\" +\r\n        \"+\\u01CF\\n+\\x03,\\x03,\\x05,\\u01D3\\n,\\x03-\\x03-\\x05-\\u01D7\\n-\\x03.\\x03.\\x03\" +\r\n        \".\\x07.\\u01DC\\n.\\f.\\x0E.\\u01DF\\v.\\x03/\\x05/\\u01E2\\n/\\x03/\\x06/\\u01E5\\n\" +\r\n        \"/\\r/\\x0E/\\u01E6\\x03/\\x05/\\u01EA\\n/\\x030\\x030\\x030\\x050\\u01EF\\n0\\x030\\x03\" +\r\n        \"0\\x030\\x050\\u01F4\\n0\\x030\\x030\\x030\\x050\\u01F9\\n0\\x050\\u01FB\\n0\\x031\\x03\" +\r\n        \"1\\x031\\x031\\x051\\u0201\\n1\\x032\\x032\\x052\\u0205\\n2\\x033\\x033\\x034\\x034\" +\r\n        \"\\x054\\u020B\\n4\\x034\\x034\\x054\\u020F\\n4\\x034\\x034\\x054\\u0213\\n4\\x054\\u0215\" +\r\n        \"\\n4\\x035\\x035\\x035\\x035\\x035\\x035\\x055\\u021D\\n5\\x055\\u021F\\n5\\x036\\x03\" +\r\n        \"6\\x036\\x036\\x036\\x036\\x056\\u0227\\n6\\x056\\u0229\\n6\\x037\\x037\\x037\\x037\" +\r\n        \"\\x057\\u022F\\n7\\x038\\x038\\x038\\x038\\x078\\u0235\\n8\\f8\\x0E8\\u0238\\v8\\x03\" +\r\n        \"8\\x038\\x039\\x039\\x059\\u023E\\n9\\x039\\x039\\x059\\u0242\\n9\\x039\\x039\\x059\" +\r\n        \"\\u0246\\n9\\x03:\\x03:\\x05:\\u024A\\n:\\x03:\\x07:\\u024D\\n:\\f:\\x0E:\\u0250\\v:\" +\r\n        \"\\x03:\\x05:\\u0253\\n:\\x03:\\x03:\\x03:\\x03;\\x03;\\x05;\\u025A\\n;\\x03;\\x05;\\u025D\" +\r\n        \"\\n;\\x03<\\x03<\\x03<\\x03<\\x03=\\x03=\\x05=\\u0265\\n=\\x03=\\x03=\\x05=\\u0269\\n\" +\r\n        \"=\\x05=\\u026B\\n=\\x03>\\x03>\\x03>\\x03>\\x07>\\u0271\\n>\\f>\\x0E>\\u0274\\v>\\x03\" +\r\n        \">\\x03>\\x03?\\x03?\\x03?\\x03?\\x03?\\x05?\\u027D\\n?\\x05?\\u027F\\n?\\x03@\\x03@\" +\r\n        \"\\x03@\\x02\\x02\\x02A\\x02\\x02\\x04\\x02\\x06\\x02\\b\\x02\\n\\x02\\f\\x02\\x0E\\x02\\x10\" +\r\n        \"\\x02\\x12\\x02\\x14\\x02\\x16\\x02\\x18\\x02\\x1A\\x02\\x1C\\x02\\x1E\\x02 \\x02\\\"\\x02\" +\r\n        \"$\\x02&\\x02(\\x02*\\x02,\\x02.\\x020\\x022\\x024\\x026\\x028\\x02:\\x02<\\x02>\\x02\" +\r\n        \"@\\x02B\\x02D\\x02F\\x02H\\x02J\\x02L\\x02N\\x02P\\x02R\\x02T\\x02V\\x02X\\x02Z\\x02\" +\r\n        \"\\\\\\x02^\\x02`\\x02b\\x02d\\x02f\\x02h\\x02j\\x02l\\x02n\\x02p\\x02r\\x02t\\x02v\\x02\" +\r\n        \"x\\x02z\\x02|\\x02~\\x02\\x02\\x05\\x04\\x02\\x12\\x12\\x16\\x18\\x04\\x02**--\\x03\\x02\" +\r\n        \"\\x03\\x04\\x02\\u02AC\\x02\\x83\\x03\\x02\\x02\\x02\\x04\\x9D\\x03\\x02\\x02\\x02\\x06\" +\r\n        \"\\xA4\\x03\\x02\\x02\\x02\\b\\xA6\\x03\\x02\\x02\\x02\\n\\xB2\\x03\\x02\\x02\\x02\\f\\xC1\" +\r\n        \"\\x03\\x02\\x02\\x02\\x0E\\xC3\\x03\\x02\\x02\\x02\\x10\\xD3\\x03\\x02\\x02\\x02\\x12\\xD5\" +\r\n        \"\\x03\\x02\\x02\\x02\\x14\\xDC\\x03\\x02\\x02\\x02\\x16\\xE3\\x03\\x02\\x02\\x02\\x18\\xEE\" +\r\n        \"\\x03\\x02\\x02\\x02\\x1A\\xFA\\x03\\x02\\x02\\x02\\x1C\\xFC\\x03\\x02\\x02\\x02\\x1E\\u0105\" +\r\n        \"\\x03\\x02\\x02\\x02 \\u010E\\x03\\x02\\x02\\x02\\\"\\u011A\\x03\\x02\\x02\\x02$\\u011F\" +\r\n        \"\\x03\\x02\\x02\\x02&\\u0124\\x03\\x02\\x02\\x02(\\u0145\\x03\\x02\\x02\\x02*\\u014B\" +\r\n        \"\\x03\\x02\\x02\\x02,\\u014F\\x03\\x02\\x02\\x02.\\u0154\\x03\\x02\\x02\\x020\\u0156\" +\r\n        \"\\x03\\x02\\x02\\x022\\u0159\\x03\\x02\\x02\\x024\\u0162\\x03\\x02\\x02\\x026\\u0165\" +\r\n        \"\\x03\\x02\\x02\\x028\\u016A\\x03\\x02\\x02\\x02:\\u016E\\x03\\x02\\x02\\x02<\\u0170\" +\r\n        \"\\x03\\x02\\x02\\x02>\\u0172\\x03\\x02\\x02\\x02@\\u017A\\x03\\x02\\x02\\x02B\\u0182\" +\r\n        \"\\x03\\x02\\x02\\x02D\\u018D\\x03\\x02\\x02\\x02F\\u018F\\x03\\x02\\x02\\x02H\\u019C\" +\r\n        \"\\x03\\x02\\x02\\x02J\\u019F\\x03\\x02\\x02\\x02L\\u01B3\\x03\\x02\\x02\\x02N\\u01B5\" +\r\n        \"\\x03\\x02\\x02\\x02P\\u01BB\\x03\\x02\\x02\\x02R\\u01BF\\x03\\x02\\x02\\x02T\\u01CE\" +\r\n        \"\\x03\\x02\\x02\\x02V\\u01D2\\x03\\x02\\x02\\x02X\\u01D6\\x03\\x02\\x02\\x02Z\\u01D8\" +\r\n        \"\\x03\\x02\\x02\\x02\\\\\\u01E9\\x03\\x02\\x02\\x02^\\u01FA\\x03\\x02\\x02\\x02`\\u01FC\" +\r\n        \"\\x03\\x02\\x02\\x02b\\u0202\\x03\\x02\\x02\\x02d\\u0206\\x03\\x02\\x02\\x02f\\u0214\" +\r\n        \"\\x03\\x02\\x02\\x02h\\u021E\\x03\\x02\\x02\\x02j\\u0228\\x03\\x02\\x02\\x02l\\u022E\" +\r\n        \"\\x03\\x02\\x02\\x02n\\u0230\\x03\\x02\\x02\\x02p\\u0245\\x03\\x02\\x02\\x02r\\u0247\" +\r\n        \"\\x03\\x02\\x02\\x02t\\u0257\\x03\\x02\\x02\\x02v\\u025E\\x03\\x02\\x02\\x02x\\u026A\" +\r\n        \"\\x03\\x02\\x02\\x02z\\u026C\\x03\\x02\\x02\\x02|\\u027E\\x03\\x02\\x02\\x02~\\u0280\" +\r\n        \"\\x03\\x02\\x02\\x02\\x80\\x82\\x07\\x06\\x02\\x02\\x81\\x80\\x03\\x02\\x02\\x02\\x82\\x85\" +\r\n        \"\\x03\\x02\\x02\\x02\\x83\\x81\\x03\\x02\\x02\\x02\\x83\\x84\\x03\\x02\\x02\\x02\\x84\\x86\" +\r\n        \"\\x03\\x02\\x02\\x02\\x85\\x83\\x03\\x02\\x02\\x02\\x86\\x87\\x05\\x04\\x03\\x02\\x87\\x88\" +\r\n        \"\\x05~@\\x02\\x88\\x8C\\x07\\\"\\x02\\x02\\x89\\x8B\\x05\\x06\\x04\\x02\\x8A\\x89\\x03\\x02\" +\r\n        \"\\x02\\x02\\x8B\\x8E\\x03\\x02\\x02\\x02\\x8C\\x8A\\x03\\x02\\x02\\x02\\x8C\\x8D\\x03\\x02\" +\r\n        \"\\x02\\x02\\x8D\\x8F\\x03\\x02\\x02\\x02\\x8E\\x8C\\x03\\x02\\x02\\x02\\x8F\\x93\\x05\\\"\" +\r\n        \"\\x12\\x02\\x90\\x92\\x05 \\x11\\x02\\x91\\x90\\x03\\x02\\x02\\x02\\x92\\x95\\x03\\x02\" +\r\n        \"\\x02\\x02\\x93\\x91\\x03\\x02\\x02\\x02\\x93\\x94\\x03\\x02\\x02\\x02\\x94\\x96\\x03\\x02\" +\r\n        \"\\x02\\x02\\x95\\x93\\x03\\x02\\x02\\x02\\x96\\x97\\x07\\x02\\x02\\x03\\x97\\x03\\x03\\x02\" +\r\n        \"\\x02\\x02\\x98\\x99\\x07\\x13\\x02\\x02\\x99\\x9E\\x07\\x15\\x02\\x02\\x9A\\x9B\\x07\\x14\" +\r\n        \"\\x02\\x02\\x9B\\x9E\\x07\\x15\\x02\\x02\\x9C\\x9E\\x07\\x15\\x02\\x02\\x9D\\x98\\x03\\x02\" +\r\n        \"\\x02\\x02\\x9D\\x9A\\x03\\x02\\x02\\x02\\x9D\\x9C\\x03\\x02\\x02\\x02\\x9E\\x05\\x03\\x02\" +\r\n        \"\\x02\\x02\\x9F\\xA5\\x05\\b\\x05\\x02\\xA0\\xA5\\x05\\x0E\\b\\x02\\xA1\\xA5\\x05\\x12\\n\" +\r\n        \"\\x02\\xA2\\xA5\\x05\\x14\\v\\x02\\xA3\\xA5\\x05\\x18\\r\\x02\\xA4\\x9F\\x03\\x02\\x02\\x02\" +\r\n        \"\\xA4\\xA0\\x03\\x02\\x02\\x02\\xA4\\xA1\\x03\\x02\\x02\\x02\\xA4\\xA2\\x03\\x02\\x02\\x02\" +\r\n        \"\\xA4\\xA3\\x03\\x02\\x02\\x02\\xA5\\x07\\x03\\x02\\x02\\x02\\xA6\\xA7\\x07\\x0E\\x02\\x02\" +\r\n        \"\\xA7\\xAD\\x07%\\x02\\x02\\xA8\\xA9\\x05\\n\\x06\\x02\\xA9\\xAA\\x07\\\"\\x02\\x02\\xAA\" +\r\n        \"\\xAC\\x03\\x02\\x02\\x02\\xAB\\xA8\\x03\\x02\\x02\\x02\\xAC\\xAF\\x03\\x02\\x02\\x02\\xAD\" +\r\n        \"\\xAB\\x03\\x02\\x02\\x02\\xAD\\xAE\\x03\\x02\\x02\\x02\\xAE\\xB0\\x03\\x02\\x02\\x02\\xAF\" +\r\n        \"\\xAD\\x03\\x02\\x02\\x02\\xB0\\xB1\\x07&\\x02\\x02\\xB1\\t\\x03\\x02\\x02\\x02\\xB2\\xB3\" +\r\n        \"\\x05~@\\x02\\xB3\\xB4\\x07*\\x02\\x02\\xB4\\xB5\\x05\\f\\x07\\x02\\xB5\\v\\x03\\x02\\x02\" +\r\n        \"\\x02\\xB6\\xBB\\x05~@\\x02\\xB7\\xB8\\x072\\x02\\x02\\xB8\\xBA\\x05~@\\x02\\xB9\\xB7\" +\r\n        \"\\x03\\x02\\x02\\x02\\xBA\\xBD\\x03\\x02\\x02\\x02\\xBB\\xB9\\x03\\x02\\x02\\x02\\xBB\\xBC\" +\r\n        \"\\x03\\x02\\x02\\x02\\xBC\\xC2\\x03\\x02\\x02\\x02\\xBD\\xBB\\x03\\x02\\x02\\x02\\xBE\\xC2\" +\r\n        \"\\x07\\n\\x02\\x02\\xBF\\xC2\\x05\\x1C\\x0F\\x02\\xC0\\xC2\\x07\\t\\x02\\x02\\xC1\\xB6\\x03\" +\r\n        \"\\x02\\x02\\x02\\xC1\\xBE\\x03\\x02\\x02\\x02\\xC1\\xBF\\x03\\x02\\x02\\x02\\xC1\\xC0\\x03\" +\r\n        \"\\x02\\x02\\x02\\xC2\\r\\x03\\x02\\x02\\x02\\xC3\\xC4\\x07\\x11\\x02\\x02\\xC4\\xC9\\x05\" +\r\n        \"\\x10\\t\\x02\\xC5\\xC6\\x07!\\x02\\x02\\xC6\\xC8\\x05\\x10\\t\\x02\\xC7\\xC5\\x03\\x02\" +\r\n        \"\\x02\\x02\\xC8\\xCB\\x03\\x02\\x02\\x02\\xC9\\xC7\\x03\\x02\\x02\\x02\\xC9\\xCA\\x03\\x02\" +\r\n        \"\\x02\\x02\\xCA\\xCC\\x03\\x02\\x02\\x02\\xCB\\xC9\\x03\\x02\\x02\\x02\\xCC\\xCD\\x07\\\"\" +\r\n        \"\\x02\\x02\\xCD\\x0F\\x03\\x02\\x02\\x02\\xCE\\xCF\\x05~@\\x02\\xCF\\xD0\\x07*\\x02\\x02\" +\r\n        \"\\xD0\\xD1\\x05~@\\x02\\xD1\\xD4\\x03\\x02\\x02\\x02\\xD2\\xD4\\x05~@\\x02\\xD3\\xCE\\x03\" +\r\n        \"\\x02\\x02\\x02\\xD3\\xD2\\x03\\x02\\x02\\x02\\xD4\\x11\\x03\\x02\\x02\\x02\\xD5\\xD6\\x07\" +\r\n        \"\\x0F\\x02\\x02\\xD6\\xD8\\x07%\\x02\\x02\\xD7\\xD9\\x05\\x16\\f\\x02\\xD8\\xD7\\x03\\x02\" +\r\n        \"\\x02\\x02\\xD8\\xD9\\x03\\x02\\x02\\x02\\xD9\\xDA\\x03\\x02\\x02\\x02\\xDA\\xDB\\x07&\" +\r\n        \"\\x02\\x02\\xDB\\x13\\x03\\x02\\x02\\x02\\xDC\\xDD\\x07\\x10\\x02\\x02\\xDD\\xDF\\x07%\" +\r\n        \"\\x02\\x02\\xDE\\xE0\\x05\\x16\\f\\x02\\xDF\\xDE\\x03\\x02\\x02\\x02\\xDF\\xE0\\x03\\x02\" +\r\n        \"\\x02\\x02\\xE0\\xE1\\x03\\x02\\x02\\x02\\xE1\\xE2\\x07&\\x02\\x02\\xE2\\x15\\x03\\x02\" +\r\n        \"\\x02\\x02\\xE3\\xE8\\x05~@\\x02\\xE4\\xE5\\x07!\\x02\\x02\\xE5\\xE7\\x05~@\\x02\\xE6\" +\r\n        \"\\xE4\\x03\\x02\\x02\\x02\\xE7\\xEA\\x03\\x02\\x02\\x02\\xE8\\xE6\\x03\\x02\\x02\\x02\\xE8\" +\r\n        \"\\xE9\\x03\\x02\\x02\\x02\\xE9\\xEC\\x03\\x02\\x02\\x02\\xEA\\xE8\\x03\\x02\\x02\\x02\\xEB\" +\r\n        \"\\xED\\x07!\\x02\\x02\\xEC\\xEB\\x03\\x02\\x02\\x02\\xEC\\xED\\x03\\x02\\x02\\x02\\xED\" +\r\n        \"\\x17\\x03\\x02\\x02\\x02\\xEE\\xF2\\x073\\x02\\x02\\xEF\\xF0\\x05\\x1A\\x0E\\x02\\xF0\" +\r\n        \"\\xF1\\x07 \\x02\\x02\\xF1\\xF3\\x03\\x02\\x02\\x02\\xF2\\xEF\\x03\\x02\\x02\\x02\\xF2\" +\r\n        \"\\xF3\\x03\\x02\\x02\\x02\\xF3\\xF4\\x03\\x02\\x02\\x02\\xF4\\xF5\\x05~@\\x02\\xF5\\xF6\" +\r\n        \"\\x05\\x1C\\x0F\\x02\\xF6\\x19\\x03\\x02\\x02\\x02\\xF7\\xFB\\x05~@\\x02\\xF8\\xFB\\x07\" +\r\n        \"\\x13\\x02\\x02\\xF9\\xFB\\x07\\x14\\x02\\x02\\xFA\\xF7\\x03\\x02\\x02\\x02\\xFA\\xF8\\x03\" +\r\n        \"\\x02\\x02\\x02\\xFA\\xF9\\x03\\x02\\x02\\x02\\xFB\\x1B\\x03\\x02\\x02\\x02\\xFC\\u0100\" +\r\n        \"\\x07\\r\\x02\\x02\\xFD\\xFF\\x07=\\x02\\x02\\xFE\\xFD\\x03\\x02\\x02\\x02\\xFF\\u0102\" +\r\n        \"\\x03\\x02\\x02\\x02\\u0100\\xFE\\x03\\x02\\x02\\x02\\u0100\\u0101\\x03\\x02\\x02\\x02\" +\r\n        \"\\u0101\\u0103\\x03\\x02\\x02\\x02\\u0102\\u0100\\x03\\x02\\x02\\x02\\u0103\\u0104\\x07\" +\r\n        \";\\x02\\x02\\u0104\\x1D\\x03\\x02\\x02\\x02\\u0105\\u0109\\x07\\f\\x02\\x02\\u0106\\u0108\" +\r\n        \"\\x07:\\x02\\x02\\u0107\\u0106\\x03\\x02\\x02\\x02\\u0108\\u010B\\x03\\x02\\x02\\x02\" +\r\n        \"\\u0109\\u0107\\x03\\x02\\x02\\x02\\u0109\\u010A\\x03\\x02\\x02\\x02\\u010A\\u010C\\x03\" +\r\n        \"\\x02\\x02\\x02\\u010B\\u0109\\x03\\x02\\x02\\x02\\u010C\\u010D\\x078\\x02\\x02\\u010D\" +\r\n        \"\\x1F\\x03\\x02\\x02\\x02\\u010E\\u010F\\x07\\x1E\\x02\\x02\\u010F\\u0110\\x05~@\\x02\" +\r\n        \"\\u0110\\u0114\\x07\\\"\\x02\\x02\\u0111\\u0113\\x05B\\\"\\x02\\u0112\\u0111\\x03\\x02\" +\r\n        \"\\x02\\x02\\u0113\\u0116\\x03\\x02\\x02\\x02\\u0114\\u0112\\x03\\x02\\x02\\x02\\u0114\" +\r\n        \"\\u0115\\x03\\x02\\x02\\x02\\u0115!\\x03\\x02\\x02\\x02\\u0116\\u0114\\x03\\x02\\x02\" +\r\n        \"\\x02\\u0117\\u0119\\x05$\\x13\\x02\\u0118\\u0117\\x03\\x02\\x02\\x02\\u0119\\u011C\" +\r\n        \"\\x03\\x02\\x02\\x02\\u011A\\u0118\\x03\\x02\\x02\\x02\\u011A\\u011B\\x03\\x02\\x02\\x02\" +\r\n        \"\\u011B#\\x03\\x02\\x02\\x02\\u011C\\u011A\\x03\\x02\\x02\\x02\\u011D\\u0120\\x05&\\x14\" +\r\n        \"\\x02\\u011E\\u0120\\x05B\\\"\\x02\\u011F\\u011D\\x03\\x02\\x02\\x02\\u011F\\u011E\\x03\" +\r\n        \"\\x02\\x02\\x02\\u0120%\\x03\\x02\\x02\\x02\\u0121\\u0123\\x07\\x06\\x02\\x02\\u0122\" +\r\n        \"\\u0121\\x03\\x02\\x02\\x02\\u0123\\u0126\\x03\\x02\\x02\\x02\\u0124\\u0122\\x03\\x02\" +\r\n        \"\\x02\\x02\\u0124\\u0125\\x03\\x02\\x02\\x02\\u0125\\u0128\\x03\\x02\\x02\\x02\\u0126\" +\r\n        \"\\u0124\\x03\\x02\\x02\\x02\\u0127\\u0129\\x058\\x1D\\x02\\u0128\\u0127\\x03\\x02\\x02\" +\r\n        \"\\x02\\u0128\\u0129\\x03\\x02\\x02\\x02\\u0129\\u012A\\x03\\x02\\x02\\x02\\u012A\\u012C\" +\r\n        \"\\x07\\x04\\x02\\x02\\u012B\\u012D\\x05\\x1E\\x10\\x02\\u012C\\u012B\\x03\\x02\\x02\\x02\" +\r\n        \"\\u012C\\u012D\\x03\\x02\\x02\\x02\\u012D\\u012F\\x03\\x02\\x02\\x02\\u012E\\u0130\\x05\" +\r\n        \"0\\x19\\x02\\u012F\\u012E\\x03\\x02\\x02\\x02\\u012F\\u0130\\x03\\x02\\x02\\x02\\u0130\" +\r\n        \"\\u0132\\x03\\x02\\x02\\x02\\u0131\\u0133\\x052\\x1A\\x02\\u0132\\u0131\\x03\\x02\\x02\" +\r\n        \"\\x02\\u0132\\u0133\\x03\\x02\\x02\\x02\\u0133\\u0135\\x03\\x02\\x02\\x02\\u0134\\u0136\" +\r\n        \"\\x054\\x1B\\x02\\u0135\\u0134\\x03\\x02\\x02\\x02\\u0135\\u0136\\x03\\x02\\x02\\x02\" +\r\n        \"\\u0136\\u013A\\x03\\x02\\x02\\x02\\u0137\\u0139\\x05.\\x18\\x02\\u0138\\u0137\\x03\" +\r\n        \"\\x02\\x02\\x02\\u0139\\u013C\\x03\\x02\\x02\\x02\\u013A\\u0138\\x03\\x02\\x02\\x02\\u013A\" +\r\n        \"\\u013B\\x03\\x02\\x02\\x02\\u013B\\u013D\\x03\\x02\\x02\\x02\\u013C\\u013A\\x03\\x02\" +\r\n        \"\\x02\\x02\\u013D\\u013E\\x07\\x1F\\x02\\x02\\u013E\\u013F\\x05<\\x1F\\x02\\u013F\\u0140\" +\r\n        \"\\x07\\\"\\x02\\x02\\u0140\\u0141\\x05(\\x15\\x02\\u0141\\'\\x03\\x02\\x02\\x02\\u0142\" +\r\n        \"\\u0144\\x05*\\x16\\x02\\u0143\\u0142\\x03\\x02\\x02\\x02\\u0144\\u0147\\x03\\x02\\x02\" +\r\n        \"\\x02\\u0145\\u0143\\x03\\x02\\x02\\x02\\u0145\\u0146\\x03\\x02\\x02\\x02\\u0146\\u0149\" +\r\n        \"\\x03\\x02\\x02\\x02\\u0147\\u0145\\x03\\x02\\x02\\x02\\u0148\\u014A\\x05,\\x17\\x02\" +\r\n        \"\\u0149\\u0148\\x03\\x02\\x02\\x02\\u0149\\u014A\\x03\\x02\\x02\\x02\\u014A)\\x03\\x02\" +\r\n        \"\\x02\\x02\\u014B\\u014C\\x07\\x1C\\x02\\x02\\u014C\\u014D\\x05\\x1E\\x10\\x02\\u014D\" +\r\n        \"\\u014E\\x05\\x1C\\x0F\\x02\\u014E+\\x03\\x02\\x02\\x02\\u014F\\u0150\\x07\\x1D\\x02\" +\r\n        \"\\x02\\u0150\\u0151\\x05\\x1C\\x0F\\x02\\u0151-\\x03\\x02\\x02\\x02\\u0152\\u0155\\x05\" +\r\n        \"\\b\\x05\\x02\\u0153\\u0155\\x056\\x1C\\x02\\u0154\\u0152\\x03\\x02\\x02\\x02\\u0154\" +\r\n        \"\\u0153\\x03\\x02\\x02\\x02\\u0155/\\x03\\x02\\x02\\x02\\u0156\\u0157\\x07\\x19\\x02\" +\r\n        \"\\x02\\u0157\\u0158\\x05\\x1E\\x10\\x02\\u01581\\x03\\x02\\x02\\x02\\u0159\\u015A\\x07\" +\r\n        \"\\x1B\\x02\\x02\\u015A\\u015F\\x05~@\\x02\\u015B\\u015C\\x07!\\x02\\x02\\u015C\\u015E\" +\r\n        \"\\x05~@\\x02\\u015D\\u015B\\x03\\x02\\x02\\x02\\u015E\\u0161\\x03\\x02\\x02\\x02\\u015F\" +\r\n        \"\\u015D\\x03\\x02\\x02\\x02\\u015F\\u0160\\x03\\x02\\x02\\x02\\u01603\\x03\\x02\\x02\" +\r\n        \"\\x02\\u0161\\u015F\\x03\\x02\\x02\\x02\\u0162\\u0163\\x07\\x1A\\x02\\x02\\u0163\\u0164\" +\r\n        \"\\x05\\x1E\\x10\\x02\\u01645\\x03\\x02\\x02\\x02\\u0165\\u0166\\x073\\x02\\x02\\u0166\" +\r\n        \"\\u0167\\x05~@\\x02\\u0167\\u0168\\x05\\x1C\\x0F\\x02\\u01687\\x03\\x02\\x02\\x02\\u0169\" +\r\n        \"\\u016B\\x05:\\x1E\\x02\\u016A\\u0169\\x03\\x02\\x02\\x02\\u016B\\u016C\\x03\\x02\\x02\" +\r\n        \"\\x02\\u016C\\u016A\\x03\\x02\\x02\\x02\\u016C\\u016D\\x03\\x02\\x02\\x02\\u016D9\\x03\" +\r\n        \"\\x02\\x02\\x02\\u016E\\u016F\\t\\x02\\x02\\x02\\u016F;\\x03\\x02\\x02\\x02\\u0170\\u0171\" +\r\n        \"\\x05> \\x02\\u0171=\\x03\\x02\\x02\\x02\\u0172\\u0177\\x05@!\\x02\\u0173\\u0174\\x07\" +\r\n        \"/\\x02\\x02\\u0174\\u0176\\x05@!\\x02\\u0175\\u0173\\x03\\x02\\x02\\x02\\u0176\\u0179\" +\r\n        \"\\x03\\x02\\x02\\x02\\u0177\\u0175\\x03\\x02\\x02\\x02\\u0177\\u0178\\x03\\x02\\x02\\x02\" +\r\n        \"\\u0178?\\x03\\x02\\x02\\x02\\u0179\\u0177\\x03\\x02\\x02\\x02\\u017A\\u017D\\x05\\\\\" +\r\n        \"/\\x02\\u017B\\u017C\\x074\\x02\\x02\\u017C\\u017E\\x05~@\\x02\\u017D\\u017B\\x03\\x02\" +\r\n        \"\\x02\\x02\\u017D\\u017E\\x03\\x02\\x02\\x02\\u017EA\\x03\\x02\\x02\\x02\\u017F\\u0181\" +\r\n        \"\\x07\\x06\\x02\\x02\\u0180\\u017F\\x03\\x02\\x02\\x02\\u0181\\u0184\\x03\\x02\\x02\\x02\" +\r\n        \"\\u0182\\u0180\\x03\\x02\\x02\\x02\\u0182\\u0183\\x03\\x02\\x02\\x02\\u0183\\u0186\\x03\" +\r\n        \"\\x02\\x02\\x02\\u0184\\u0182\\x03\\x02\\x02\\x02\\u0185\\u0187\\x07\\x12\\x02\\x02\\u0186\" +\r\n        \"\\u0185\\x03\\x02\\x02\\x02\\u0186\\u0187\\x03\\x02\\x02\\x02\\u0187\\u0188\\x03\\x02\" +\r\n        \"\\x02\\x02\\u0188\\u0189\\x07\\x03\\x02\\x02\\u0189\\u018A\\x07\\x1F\\x02\\x02\\u018A\" +\r\n        \"\\u018B\\x05D#\\x02\\u018B\\u018C\\x07\\\"\\x02\\x02\\u018CC\\x03\\x02\\x02\\x02\\u018D\" +\r\n        \"\\u018E\\x05F$\\x02\\u018EE\\x03\\x02\\x02\\x02\\u018F\\u0194\\x05H%\\x02\\u0190\\u0191\" +\r\n        \"\\x07/\\x02\\x02\\u0191\\u0193\\x05H%\\x02\\u0192\\u0190\\x03\\x02\\x02\\x02\\u0193\" +\r\n        \"\\u0196\\x03\\x02\\x02\\x02\\u0194\\u0192\\x03\\x02\\x02\\x02\\u0194\\u0195\\x03\\x02\" +\r\n        \"\\x02\\x02\\u0195G\\x03\\x02\\x02\\x02\\u0196\\u0194\\x03\\x02\\x02\\x02\\u0197\\u0199\" +\r\n        \"\\x05J&\\x02\\u0198\\u019A\\x05R*\\x02\\u0199\\u0198\\x03\\x02\\x02\\x02\\u0199\\u019A\" +\r\n        \"\\x03\\x02\\x02\\x02\\u019A\\u019D\\x03\\x02\\x02\\x02\\u019B\\u019D\\x03\\x02\\x02\\x02\" +\r\n        \"\\u019C\\u0197\\x03\\x02\\x02\\x02\\u019C\\u019B\\x03\\x02\\x02\\x02\\u019DI\\x03\\x02\" +\r\n        \"\\x02\\x02\\u019E\\u01A0\\x05L\\'\\x02\\u019F\\u019E\\x03\\x02\\x02\\x02\\u01A0\\u01A1\" +\r\n        \"\\x03\\x02\\x02\\x02\\u01A1\\u019F\\x03\\x02\\x02\\x02\\u01A1\\u01A2\\x03\\x02\\x02\\x02\" +\r\n        \"\\u01A2K\\x03\\x02\\x02\\x02\\u01A3\\u01A5\\x05N(\\x02\\u01A4\\u01A6\\x05f4\\x02\\u01A5\" +\r\n        \"\\u01A4\\x03\\x02\\x02\\x02\\u01A5\\u01A6\\x03\\x02\\x02\\x02\\u01A6\\u01B4\\x03\\x02\" +\r\n        \"\\x02\\x02\\u01A7\\u01A9\\x05h5\\x02\\u01A8\\u01AA\\x05f4\\x02\\u01A9\\u01A8\\x03\\x02\" +\r\n        \"\\x02\\x02\\u01A9\\u01AA\\x03\\x02\\x02\\x02\\u01AA\\u01B4\\x03\\x02\\x02\\x02\\u01AB\" +\r\n        \"\\u01AD\\x05P)\\x02\\u01AC\\u01AE\\x05f4\\x02\\u01AD\\u01AC\\x03\\x02\\x02\\x02\\u01AD\" +\r\n        \"\\u01AE\\x03\\x02\\x02\\x02\\u01AE\\u01B4\\x03\\x02\\x02\\x02\\u01AF\\u01B1\\x05\\x1C\" +\r\n        \"\\x0F\\x02\\u01B0\\u01B2\\x07+\\x02\\x02\\u01B1\\u01B0\\x03\\x02\\x02\\x02\\u01B1\\u01B2\" +\r\n        \"\\x03\\x02\\x02\\x02\\u01B2\\u01B4\\x03\\x02\\x02\\x02\\u01B3\\u01A3\\x03\\x02\\x02\\x02\" +\r\n        \"\\u01B3\\u01A7\\x03\\x02\\x02\\x02\\u01B3\\u01AB\\x03\\x02\\x02\\x02\\u01B3\\u01AF\\x03\" +\r\n        \"\\x02\\x02\\x02\\u01B4M\\x03\\x02\\x02\\x02\\u01B5\\u01B6\\x05~@\\x02\\u01B6\\u01B9\" +\r\n        \"\\t\\x03\\x02\\x02\\u01B7\\u01BA\\x05h5\\x02\\u01B8\\u01BA\\x05r:\\x02\\u01B9\\u01B7\" +\r\n        \"\\x03\\x02\\x02\\x02\\u01B9\\u01B8\\x03\\x02\\x02\\x02\\u01BAO\\x03\\x02\\x02\\x02\\u01BB\" +\r\n        \"\\u01BC\\x07#\\x02\\x02\\u01BC\\u01BD\\x05F$\\x02\\u01BD\\u01BE\\x07$\\x02\\x02\\u01BE\" +\r\n        \"Q\\x03\\x02\\x02\\x02\\u01BF\\u01C0\\x07\\'\\x02\\x02\\u01C0\\u01C5\\x05T+\\x02\\u01C1\" +\r\n        \"\\u01C2\\x07!\\x02\\x02\\u01C2\\u01C4\\x05T+\\x02\\u01C3\\u01C1\\x03\\x02\\x02\\x02\" +\r\n        \"\\u01C4\\u01C7\\x03\\x02\\x02\\x02\\u01C5\\u01C3\\x03\\x02\\x02\\x02\\u01C5\\u01C6\\x03\" +\r\n        \"\\x02\\x02\\x02\\u01C6S\\x03\\x02\\x02\\x02\\u01C7\\u01C5\\x03\\x02\\x02\\x02\\u01C8\" +\r\n        \"\\u01C9\\x05V,\\x02\\u01C9\\u01CA\\x07#\\x02\\x02\\u01CA\\u01CB\\x05X-\\x02\\u01CB\" +\r\n        \"\\u01CC\\x07$\\x02\\x02\\u01CC\\u01CF\\x03\\x02\\x02\\x02\\u01CD\\u01CF\\x05V,\\x02\" +\r\n        \"\\u01CE\\u01C8\\x03\\x02\\x02\\x02\\u01CE\\u01CD\\x03\\x02\\x02\\x02\\u01CFU\\x03\\x02\" +\r\n        \"\\x02\\x02\\u01D0\\u01D3\\x05~@\\x02\\u01D1\\u01D3\\x07\\x1E\\x02\\x02\\u01D2\\u01D0\" +\r\n        \"\\x03\\x02\\x02\\x02\\u01D2\\u01D1\\x03\\x02\\x02\\x02\\u01D3W\\x03\\x02\\x02\\x02\\u01D4\" +\r\n        \"\\u01D7\\x05~@\\x02\\u01D5\\u01D7\\x07\\t\\x02\\x02\\u01D6\\u01D4\\x03\\x02\\x02\\x02\" +\r\n        \"\\u01D6\\u01D5\\x03\\x02\\x02\\x02\\u01D7Y\\x03\\x02\\x02\\x02\\u01D8\\u01DD\\x05\\\\\" +\r\n        \"/\\x02\\u01D9\\u01DA\\x07/\\x02\\x02\\u01DA\\u01DC\\x05\\\\/\\x02\\u01DB\\u01D9\\x03\" +\r\n        \"\\x02\\x02\\x02\\u01DC\\u01DF\\x03\\x02\\x02\\x02\\u01DD\\u01DB\\x03\\x02\\x02\\x02\\u01DD\" +\r\n        \"\\u01DE\\x03\\x02\\x02\\x02\\u01DE[\\x03\\x02\\x02\\x02\\u01DF\\u01DD\\x03\\x02\\x02\" +\r\n        \"\\x02\\u01E0\\u01E2\\x05z>\\x02\\u01E1\\u01E0\\x03\\x02\\x02\\x02\\u01E1\\u01E2\\x03\" +\r\n        \"\\x02\\x02\\x02\\u01E2\\u01E4\\x03\\x02\\x02\\x02\\u01E3\\u01E5\\x05^0\\x02\\u01E4\\u01E3\" +\r\n        \"\\x03\\x02\\x02\\x02\\u01E5\\u01E6\\x03\\x02\\x02\\x02\\u01E6\\u01E4\\x03\\x02\\x02\\x02\" +\r\n        \"\\u01E6\\u01E7\\x03\\x02\\x02\\x02\\u01E7\\u01EA\\x03\\x02\\x02\\x02\\u01E8\\u01EA\\x03\" +\r\n        \"\\x02\\x02\\x02\\u01E9\\u01E1\\x03\\x02\\x02\\x02\\u01E9\\u01E8\\x03\\x02\\x02\\x02\\u01EA\" +\r\n        \"]\\x03\\x02\\x02\\x02\\u01EB\\u01EE\\x05`1\\x02\\u01EC\\u01EF\\x05f4\\x02\\u01ED\\u01EF\" +\r\n        \"\\x03\\x02\\x02\\x02\\u01EE\\u01EC\\x03\\x02\\x02\\x02\\u01EE\\u01ED\\x03\\x02\\x02\\x02\" +\r\n        \"\\u01EF\\u01FB\\x03\\x02\\x02\\x02\\u01F0\\u01F3\\x05j6\\x02\\u01F1\\u01F4\\x05f4\\x02\" +\r\n        \"\\u01F2\\u01F4\\x03\\x02\\x02\\x02\\u01F3\\u01F1\\x03\\x02\\x02\\x02\\u01F3\\u01F2\\x03\" +\r\n        \"\\x02\\x02\\x02\\u01F4\\u01FB\\x03\\x02\\x02\\x02\\u01F5\\u01FB\\x05b2\\x02\\u01F6\\u01F8\" +\r\n        \"\\x05\\x1C\\x0F\\x02\\u01F7\\u01F9\\x07+\\x02\\x02\\u01F8\\u01F7\\x03\\x02\\x02\\x02\" +\r\n        \"\\u01F8\\u01F9\\x03\\x02\\x02\\x02\\u01F9\\u01FB\\x03\\x02\\x02\\x02\\u01FA\\u01EB\\x03\" +\r\n        \"\\x02\\x02\\x02\\u01FA\\u01F0\\x03\\x02\\x02\\x02\\u01FA\\u01F5\\x03\\x02\\x02\\x02\\u01FA\" +\r\n        \"\\u01F6\\x03\\x02\\x02\\x02\\u01FB_\\x03\\x02\\x02\\x02\\u01FC\\u01FD\\x05~@\\x02\\u01FD\" +\r\n        \"\\u0200\\t\\x03\\x02\\x02\\u01FE\\u0201\\x05j6\\x02\\u01FF\\u0201\\x05r:\\x02\\u0200\" +\r\n        \"\\u01FE\\x03\\x02\\x02\\x02\\u0200\\u01FF\\x03\\x02\\x02\\x02\\u0201a\\x03\\x02\\x02\" +\r\n        \"\\x02\\u0202\\u0204\\x05r:\\x02\\u0203\\u0205\\x05d3\\x02\\u0204\\u0203\\x03\\x02\\x02\" +\r\n        \"\\x02\\u0204\\u0205\\x03\\x02\\x02\\x02\\u0205c\\x03\\x02\\x02\\x02\\u0206\\u0207\\x05\" +\r\n        \"f4\\x02\\u0207e\\x03\\x02\\x02\\x02\\u0208\\u020A\\x07+\\x02\\x02\\u0209\\u020B\\x07\" +\r\n        \"+\\x02\\x02\\u020A\\u0209\\x03\\x02\\x02\\x02\\u020A\\u020B\\x03\\x02\\x02\\x02\\u020B\" +\r\n        \"\\u0215\\x03\\x02\\x02\\x02\\u020C\\u020E\\x07,\\x02\\x02\\u020D\\u020F\\x07+\\x02\\x02\" +\r\n        \"\\u020E\\u020D\\x03\\x02\\x02\\x02\\u020E\\u020F\\x03\\x02\\x02\\x02\\u020F\\u0215\\x03\" +\r\n        \"\\x02\\x02\\x02\\u0210\\u0212\\x07.\\x02\\x02\\u0211\\u0213\\x07+\\x02\\x02\\u0212\\u0211\" +\r\n        \"\\x03\\x02\\x02\\x02\\u0212\\u0213\\x03\\x02\\x02\\x02\\u0213\\u0215\\x03\\x02\\x02\\x02\" +\r\n        \"\\u0214\\u0208\\x03\\x02\\x02\\x02\\u0214\\u020C\\x03\\x02\\x02\\x02\\u0214\\u0210\\x03\" +\r\n        \"\\x02\\x02\\x02\\u0215g\\x03\\x02\\x02\\x02\\u0216\\u021F\\x05v<\\x02\\u0217\\u021F\" +\r\n        \"\\x05x=\\x02\\u0218\\u021F\\x05l7\\x02\\u0219\\u021F\\x07\\x05\\x02\\x02\\u021A\\u021C\" +\r\n        \"\\x072\\x02\\x02\\u021B\\u021D\\x05z>\\x02\\u021C\\u021B\\x03\\x02\\x02\\x02\\u021C\" +\r\n        \"\\u021D\\x03\\x02\\x02\\x02\\u021D\\u021F\\x03\\x02\\x02\\x02\\u021E\\u0216\\x03\\x02\" +\r\n        \"\\x02\\x02\\u021E\\u0217\\x03\\x02\\x02\\x02\\u021E\\u0218\\x03\\x02\\x02\\x02\\u021E\" +\r\n        \"\\u0219\\x03\\x02\\x02\\x02\\u021E\\u021A\\x03\\x02\\x02\\x02\\u021Fi\\x03\\x02\\x02\" +\r\n        \"\\x02\\u0220\\u0229\\x05v<\\x02\\u0221\\u0229\\x05x=\\x02\\u0222\\u0229\\x05t;\\x02\" +\r\n        \"\\u0223\\u0229\\x05l7\\x02\\u0224\\u0226\\x072\\x02\\x02\\u0225\\u0227\\x05z>\\x02\" +\r\n        \"\\u0226\\u0225\\x03\\x02\\x02\\x02\\u0226\\u0227\\x03\\x02\\x02\\x02\\u0227\\u0229\\x03\" +\r\n        \"\\x02\\x02\\x02\\u0228\\u0220\\x03\\x02\\x02\\x02\\u0228\\u0221\\x03\\x02\\x02\\x02\\u0228\" +\r\n        \"\\u0222\\x03\\x02\\x02\\x02\\u0228\\u0223\\x03\\x02\\x02\\x02\\u0228\";\r\n    private static readonly _serializedATNSegment1: string =\r\n        \"\\u0224\\x03\\x02\\x02\\x02\\u0229k\\x03\\x02\\x02\\x02\\u022A\\u022B\\x075\\x02\\x02\" +\r\n        \"\\u022B\\u022F\\x05p9\\x02\\u022C\\u022D\\x075\\x02\\x02\\u022D\\u022F\\x05n8\\x02\" +\r\n        \"\\u022E\\u022A\\x03\\x02\\x02\\x02\\u022E\\u022C\\x03\\x02\\x02\\x02\\u022Fm\\x03\\x02\" +\r\n        \"\\x02\\x02\\u0230\\u0231\\x07#\\x02\\x02\\u0231\\u0236\\x05p9\\x02\\u0232\\u0233\\x07\" +\r\n        \"/\\x02\\x02\\u0233\\u0235\\x05p9\\x02\\u0234\\u0232\\x03\\x02\\x02\\x02\\u0235\\u0238\" +\r\n        \"\\x03\\x02\\x02\\x02\\u0236\\u0234\\x03\\x02\\x02\\x02\\u0236\\u0237\\x03\\x02\\x02\\x02\" +\r\n        \"\\u0237\\u0239\\x03\\x02\\x02\\x02\\u0238\\u0236\\x03\\x02\\x02\\x02\\u0239\\u023A\\x07\" +\r\n        \"$\\x02\\x02\\u023Ao\\x03\\x02\\x02\\x02\\u023B\\u023D\\x07\\x03\\x02\\x02\\u023C\\u023E\" +\r\n        \"\\x05z>\\x02\\u023D\\u023C\\x03\\x02\\x02\\x02\\u023D\\u023E\\x03\\x02\\x02\\x02\\u023E\" +\r\n        \"\\u0246\\x03\\x02\\x02\\x02\\u023F\\u0241\\x07\\n\\x02\\x02\\u0240\\u0242\\x05z>\\x02\" +\r\n        \"\\u0241\\u0240\\x03\\x02\\x02\\x02\\u0241\\u0242\\x03\\x02\\x02\\x02\\u0242\\u0246\\x03\" +\r\n        \"\\x02\\x02\\x02\\u0243\\u0246\\x05v<\\x02\\u0244\\u0246\\x07\\x05\\x02\\x02\\u0245\\u023B\" +\r\n        \"\\x03\\x02\\x02\\x02\\u0245\\u023F\\x03\\x02\\x02\\x02\\u0245\\u0243\\x03\\x02\\x02\\x02\" +\r\n        \"\\u0245\\u0244\\x03\\x02\\x02\\x02\\u0246q\\x03\\x02\\x02\\x02\\u0247\\u0252\\x07#\\x02\" +\r\n        \"\\x02\\u0248\\u024A\\x05\\b\\x05\\x02\\u0249\\u0248\\x03\\x02\\x02\\x02\\u0249\\u024A\" +\r\n        \"\\x03\\x02\\x02\\x02\\u024A\\u024E\\x03\\x02\\x02\\x02\\u024B\\u024D\\x056\\x1C\\x02\" +\r\n        \"\\u024C\\u024B\\x03\\x02\\x02\\x02\\u024D\\u0250\\x03\\x02\\x02\\x02\\u024E\\u024C\\x03\" +\r\n        \"\\x02\\x02\\x02\\u024E\\u024F\\x03\\x02\\x02\\x02\\u024F\\u0251\\x03\\x02\\x02\\x02\\u0250\" +\r\n        \"\\u024E\\x03\\x02\\x02\\x02\\u0251\\u0253\\x07\\x1F\\x02\\x02\\u0252\\u0249\\x03\\x02\" +\r\n        \"\\x02\\x02\\u0252\\u0253\\x03\\x02\\x02\\x02\\u0253\\u0254\\x03\\x02\\x02\\x02\\u0254\" +\r\n        \"\\u0255\\x05Z.\\x02\\u0255\\u0256\\x07$\\x02\\x02\\u0256s\\x03\\x02\\x02\\x02\\u0257\" +\r\n        \"\\u0259\\x07\\x04\\x02\\x02\\u0258\\u025A\\x05\\x1E\\x10\\x02\\u0259\\u0258\\x03\\x02\" +\r\n        \"\\x02\\x02\\u0259\\u025A\\x03\\x02\\x02\\x02\\u025A\\u025C\\x03\\x02\\x02\\x02\\u025B\" +\r\n        \"\\u025D\\x05z>\\x02\\u025C\\u025B\\x03\\x02\\x02\\x02\\u025C\\u025D\\x03\\x02\\x02\\x02\" +\r\n        \"\\u025Du\\x03\\x02\\x02\\x02\\u025E\\u025F\\x07\\n\\x02\\x02\\u025F\\u0260\\x071\\x02\" +\r\n        \"\\x02\\u0260\\u0261\\x07\\n\\x02\\x02\\u0261w\\x03\\x02\\x02\\x02\\u0262\\u0264\\x07\" +\r\n        \"\\x03\\x02\\x02\\u0263\\u0265\\x05z>\\x02\\u0264\\u0263\\x03\\x02\\x02\\x02\\u0264\\u0265\" +\r\n        \"\\x03\\x02\\x02\\x02\\u0265\\u026B\\x03\\x02\\x02\\x02\\u0266\\u0268\\x07\\n\\x02\\x02\" +\r\n        \"\\u0267\\u0269\\x05z>\\x02\\u0268\\u0267\\x03\\x02\\x02\\x02\\u0268\\u0269\\x03\\x02\" +\r\n        \"\\x02\\x02\\u0269\\u026B\\x03\\x02\\x02\\x02\\u026A\\u0262\\x03\\x02\\x02\\x02\\u026A\" +\r\n        \"\\u0266\\x03\\x02\\x02\\x02\\u026By\\x03\\x02\\x02\\x02\\u026C\\u026D\\x07(\\x02\\x02\" +\r\n        \"\\u026D\\u0272\\x05|?\\x02\\u026E\\u026F\\x07!\\x02\\x02\\u026F\\u0271\\x05|?\\x02\" +\r\n        \"\\u0270\\u026E\\x03\\x02\\x02\\x02\\u0271\\u0274\\x03\\x02\\x02\\x02\\u0272\\u0270\\x03\" +\r\n        \"\\x02\\x02\\x02\\u0272\\u0273\\x03\\x02\\x02\\x02\\u0273\\u0275\\x03\\x02\\x02\\x02\\u0274\" +\r\n        \"\\u0272\\x03\\x02\\x02\\x02\\u0275\\u0276\\x07)\\x02\\x02\\u0276{\\x03\\x02\\x02\\x02\" +\r\n        \"\\u0277\\u027F\\x05~@\\x02\\u0278\\u0279\\x05~@\\x02\\u0279\\u027C\\x07*\\x02\\x02\" +\r\n        \"\\u027A\\u027D\\x05~@\\x02\\u027B\\u027D\\x07\\n\\x02\\x02\\u027C\\u027A\\x03\\x02\\x02\" +\r\n        \"\\x02\\u027C\\u027B\\x03\\x02\\x02\\x02\\u027D\\u027F\\x03\\x02\\x02\\x02\\u027E\\u0277\" +\r\n        \"\\x03\\x02\\x02\\x02\\u027E\\u0278\\x03\\x02\\x02\\x02\\u027F}\\x03\\x02\\x02\\x02\\u0280\" +\r\n        \"\\u0281\\t\\x04\\x02\\x02\\u0281\\x7F\\x03\\x02\\x02\\x02W\\x83\\x8C\\x93\\x9D\\xA4\\xAD\" +\r\n        \"\\xBB\\xC1\\xC9\\xD3\\xD8\\xDF\\xE8\\xEC\\xF2\\xFA\\u0100\\u0109\\u0114\\u011A\\u011F\" +\r\n        \"\\u0124\\u0128\\u012C\\u012F\\u0132\\u0135\\u013A\\u0145\\u0149\\u0154\\u015F\\u016C\" +\r\n        \"\\u0177\\u017D\\u0182\\u0186\\u0194\\u0199\\u019C\\u01A1\\u01A5\\u01A9\\u01AD\\u01B1\" +\r\n        \"\\u01B3\\u01B9\\u01C5\\u01CE\\u01D2\\u01D6\\u01DD\\u01E1\\u01E6\\u01E9\\u01EE\\u01F3\" +\r\n        \"\\u01F8\\u01FA\\u0200\\u0204\\u020A\\u020E\\u0212\\u0214\\u021C\\u021E\\u0226\\u0228\" +\r\n        \"\\u022E\\u0236\\u023D\\u0241\\u0245\\u0249\\u024E\\u0252\\u0259\\u025C\\u0264\\u0268\" +\r\n        \"\\u026A\\u0272\\u027C\\u027E\";\r\n    public static readonly _serializedATN: string = Utils.join(\r\n        [\r\n            ANTLRv4Parser._serializedATNSegment0,\r\n            ANTLRv4Parser._serializedATNSegment1,\r\n        ],\r\n        \"\",\r\n    );\r\n    public static __ATN: ATN;\r\n    public static get _ATN(): ATN {\r\n        if (!ANTLRv4Parser.__ATN) {\r\n            ANTLRv4Parser.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ANTLRv4Parser._serializedATN));\r\n        }\r\n\r\n        return ANTLRv4Parser.__ATN;\r\n    }\r\n\r\n}\r\n\r\nexport class GrammarSpecContext extends ParserRuleContext {\r\n    public grammarType(): GrammarTypeContext {\r\n        return this.getRuleContext(0, GrammarTypeContext);\r\n    }\r\n    public identifier(): IdentifierContext {\r\n        return this.getRuleContext(0, IdentifierContext);\r\n    }\r\n    public SEMI(): TerminalNode { return this.getToken(ANTLRv4Parser.SEMI, 0); }\r\n    public rules(): RulesContext {\r\n        return this.getRuleContext(0, RulesContext);\r\n    }\r\n    public EOF(): TerminalNode { return this.getToken(ANTLRv4Parser.EOF, 0); }\r\n    public DOC_COMMENT(): TerminalNode[];\r\n    public DOC_COMMENT(i: number): TerminalNode;\r\n    public DOC_COMMENT(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.DOC_COMMENT);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.DOC_COMMENT, i);\r\n        }\r\n    }\r\n    public prequelConstruct(): PrequelConstructContext[];\r\n    public prequelConstruct(i: number): PrequelConstructContext;\r\n    public prequelConstruct(i?: number): PrequelConstructContext | PrequelConstructContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(PrequelConstructContext);\r\n        } else {\r\n            return this.getRuleContext(i, PrequelConstructContext);\r\n        }\r\n    }\r\n    public modeSpec(): ModeSpecContext[];\r\n    public modeSpec(i: number): ModeSpecContext;\r\n    public modeSpec(i?: number): ModeSpecContext | ModeSpecContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(ModeSpecContext);\r\n        } else {\r\n            return this.getRuleContext(i, ModeSpecContext);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_grammarSpec; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterGrammarSpec) {\r\n            listener.enterGrammarSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitGrammarSpec) {\r\n            listener.exitGrammarSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitGrammarSpec) {\r\n            return visitor.visitGrammarSpec(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class GrammarTypeContext extends ParserRuleContext {\r\n    public LEXER(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.LEXER, 0); }\r\n    public GRAMMAR(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.GRAMMAR, 0); }\r\n    public PARSER(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.PARSER, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_grammarType; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterGrammarType) {\r\n            listener.enterGrammarType(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitGrammarType) {\r\n            listener.exitGrammarType(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitGrammarType) {\r\n            return visitor.visitGrammarType(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class PrequelConstructContext extends ParserRuleContext {\r\n    public optionsSpec(): OptionsSpecContext | undefined {\r\n        return this.tryGetRuleContext(0, OptionsSpecContext);\r\n    }\r\n    public delegateGrammars(): DelegateGrammarsContext | undefined {\r\n        return this.tryGetRuleContext(0, DelegateGrammarsContext);\r\n    }\r\n    public tokensSpec(): TokensSpecContext | undefined {\r\n        return this.tryGetRuleContext(0, TokensSpecContext);\r\n    }\r\n    public channelsSpec(): ChannelsSpecContext | undefined {\r\n        return this.tryGetRuleContext(0, ChannelsSpecContext);\r\n    }\r\n    public namedAction(): NamedActionContext | undefined {\r\n        return this.tryGetRuleContext(0, NamedActionContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_prequelConstruct; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterPrequelConstruct) {\r\n            listener.enterPrequelConstruct(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitPrequelConstruct) {\r\n            listener.exitPrequelConstruct(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitPrequelConstruct) {\r\n            return visitor.visitPrequelConstruct(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class OptionsSpecContext extends ParserRuleContext {\r\n    public OPTIONS(): TerminalNode { return this.getToken(ANTLRv4Parser.OPTIONS, 0); }\r\n    public LBRACE(): TerminalNode { return this.getToken(ANTLRv4Parser.LBRACE, 0); }\r\n    public RBRACE(): TerminalNode { return this.getToken(ANTLRv4Parser.RBRACE, 0); }\r\n    public option(): OptionContext[];\r\n    public option(i: number): OptionContext;\r\n    public option(i?: number): OptionContext | OptionContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(OptionContext);\r\n        } else {\r\n            return this.getRuleContext(i, OptionContext);\r\n        }\r\n    }\r\n    public SEMI(): TerminalNode[];\r\n    public SEMI(i: number): TerminalNode;\r\n    public SEMI(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.SEMI);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.SEMI, i);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_optionsSpec; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterOptionsSpec) {\r\n            listener.enterOptionsSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitOptionsSpec) {\r\n            listener.exitOptionsSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitOptionsSpec) {\r\n            return visitor.visitOptionsSpec(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class OptionContext extends ParserRuleContext {\r\n    public identifier(): IdentifierContext {\r\n        return this.getRuleContext(0, IdentifierContext);\r\n    }\r\n    public ASSIGN(): TerminalNode { return this.getToken(ANTLRv4Parser.ASSIGN, 0); }\r\n    public optionValue(): OptionValueContext {\r\n        return this.getRuleContext(0, OptionValueContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_option; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterOption) {\r\n            listener.enterOption(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitOption) {\r\n            listener.exitOption(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitOption) {\r\n            return visitor.visitOption(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class OptionValueContext extends ParserRuleContext {\r\n    public identifier(): IdentifierContext[];\r\n    public identifier(i: number): IdentifierContext;\r\n    public identifier(i?: number): IdentifierContext | IdentifierContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(IdentifierContext);\r\n        } else {\r\n            return this.getRuleContext(i, IdentifierContext);\r\n        }\r\n    }\r\n    public DOT(): TerminalNode[];\r\n    public DOT(i: number): TerminalNode;\r\n    public DOT(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.DOT);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.DOT, i);\r\n        }\r\n    }\r\n    public STRING_LITERAL(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.STRING_LITERAL, 0); }\r\n    public actionBlock(): ActionBlockContext | undefined {\r\n        return this.tryGetRuleContext(0, ActionBlockContext);\r\n    }\r\n    public INT(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.INT, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_optionValue; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterOptionValue) {\r\n            listener.enterOptionValue(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitOptionValue) {\r\n            listener.exitOptionValue(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitOptionValue) {\r\n            return visitor.visitOptionValue(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class DelegateGrammarsContext extends ParserRuleContext {\r\n    public IMPORT(): TerminalNode { return this.getToken(ANTLRv4Parser.IMPORT, 0); }\r\n    public delegateGrammar(): DelegateGrammarContext[];\r\n    public delegateGrammar(i: number): DelegateGrammarContext;\r\n    public delegateGrammar(i?: number): DelegateGrammarContext | DelegateGrammarContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(DelegateGrammarContext);\r\n        } else {\r\n            return this.getRuleContext(i, DelegateGrammarContext);\r\n        }\r\n    }\r\n    public SEMI(): TerminalNode { return this.getToken(ANTLRv4Parser.SEMI, 0); }\r\n    public COMMA(): TerminalNode[];\r\n    public COMMA(i: number): TerminalNode;\r\n    public COMMA(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.COMMA);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.COMMA, i);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_delegateGrammars; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterDelegateGrammars) {\r\n            listener.enterDelegateGrammars(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitDelegateGrammars) {\r\n            listener.exitDelegateGrammars(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitDelegateGrammars) {\r\n            return visitor.visitDelegateGrammars(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class DelegateGrammarContext extends ParserRuleContext {\r\n    public identifier(): IdentifierContext[];\r\n    public identifier(i: number): IdentifierContext;\r\n    public identifier(i?: number): IdentifierContext | IdentifierContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(IdentifierContext);\r\n        } else {\r\n            return this.getRuleContext(i, IdentifierContext);\r\n        }\r\n    }\r\n    public ASSIGN(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.ASSIGN, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_delegateGrammar; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterDelegateGrammar) {\r\n            listener.enterDelegateGrammar(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitDelegateGrammar) {\r\n            listener.exitDelegateGrammar(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitDelegateGrammar) {\r\n            return visitor.visitDelegateGrammar(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class TokensSpecContext extends ParserRuleContext {\r\n    public TOKENS(): TerminalNode { return this.getToken(ANTLRv4Parser.TOKENS, 0); }\r\n    public LBRACE(): TerminalNode { return this.getToken(ANTLRv4Parser.LBRACE, 0); }\r\n    public RBRACE(): TerminalNode { return this.getToken(ANTLRv4Parser.RBRACE, 0); }\r\n    public idList(): IdListContext | undefined {\r\n        return this.tryGetRuleContext(0, IdListContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_tokensSpec; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterTokensSpec) {\r\n            listener.enterTokensSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitTokensSpec) {\r\n            listener.exitTokensSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitTokensSpec) {\r\n            return visitor.visitTokensSpec(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class ChannelsSpecContext extends ParserRuleContext {\r\n    public CHANNELS(): TerminalNode { return this.getToken(ANTLRv4Parser.CHANNELS, 0); }\r\n    public LBRACE(): TerminalNode { return this.getToken(ANTLRv4Parser.LBRACE, 0); }\r\n    public RBRACE(): TerminalNode { return this.getToken(ANTLRv4Parser.RBRACE, 0); }\r\n    public idList(): IdListContext | undefined {\r\n        return this.tryGetRuleContext(0, IdListContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_channelsSpec; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterChannelsSpec) {\r\n            listener.enterChannelsSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitChannelsSpec) {\r\n            listener.exitChannelsSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitChannelsSpec) {\r\n            return visitor.visitChannelsSpec(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class IdListContext extends ParserRuleContext {\r\n    public identifier(): IdentifierContext[];\r\n    public identifier(i: number): IdentifierContext;\r\n    public identifier(i?: number): IdentifierContext | IdentifierContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(IdentifierContext);\r\n        } else {\r\n            return this.getRuleContext(i, IdentifierContext);\r\n        }\r\n    }\r\n    public COMMA(): TerminalNode[];\r\n    public COMMA(i: number): TerminalNode;\r\n    public COMMA(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.COMMA);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.COMMA, i);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_idList; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterIdList) {\r\n            listener.enterIdList(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitIdList) {\r\n            listener.exitIdList(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitIdList) {\r\n            return visitor.visitIdList(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class NamedActionContext extends ParserRuleContext {\r\n    public AT(): TerminalNode { return this.getToken(ANTLRv4Parser.AT, 0); }\r\n    public identifier(): IdentifierContext {\r\n        return this.getRuleContext(0, IdentifierContext);\r\n    }\r\n    public actionBlock(): ActionBlockContext {\r\n        return this.getRuleContext(0, ActionBlockContext);\r\n    }\r\n    public actionScopeName(): ActionScopeNameContext | undefined {\r\n        return this.tryGetRuleContext(0, ActionScopeNameContext);\r\n    }\r\n    public COLONCOLON(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.COLONCOLON, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_namedAction; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterNamedAction) {\r\n            listener.enterNamedAction(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitNamedAction) {\r\n            listener.exitNamedAction(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitNamedAction) {\r\n            return visitor.visitNamedAction(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class ActionScopeNameContext extends ParserRuleContext {\r\n    public identifier(): IdentifierContext | undefined {\r\n        return this.tryGetRuleContext(0, IdentifierContext);\r\n    }\r\n    public LEXER(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.LEXER, 0); }\r\n    public PARSER(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.PARSER, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_actionScopeName; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterActionScopeName) {\r\n            listener.enterActionScopeName(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitActionScopeName) {\r\n            listener.exitActionScopeName(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitActionScopeName) {\r\n            return visitor.visitActionScopeName(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class ActionBlockContext extends ParserRuleContext {\r\n    public BEGIN_ACTION(): TerminalNode { return this.getToken(ANTLRv4Parser.BEGIN_ACTION, 0); }\r\n    public END_ACTION(): TerminalNode { return this.getToken(ANTLRv4Parser.END_ACTION, 0); }\r\n    public ACTION_CONTENT(): TerminalNode[];\r\n    public ACTION_CONTENT(i: number): TerminalNode;\r\n    public ACTION_CONTENT(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.ACTION_CONTENT);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.ACTION_CONTENT, i);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_actionBlock; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterActionBlock) {\r\n            listener.enterActionBlock(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitActionBlock) {\r\n            listener.exitActionBlock(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitActionBlock) {\r\n            return visitor.visitActionBlock(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class ArgActionBlockContext extends ParserRuleContext {\r\n    public BEGIN_ARGUMENT(): TerminalNode { return this.getToken(ANTLRv4Parser.BEGIN_ARGUMENT, 0); }\r\n    public END_ARGUMENT(): TerminalNode { return this.getToken(ANTLRv4Parser.END_ARGUMENT, 0); }\r\n    public ARGUMENT_CONTENT(): TerminalNode[];\r\n    public ARGUMENT_CONTENT(i: number): TerminalNode;\r\n    public ARGUMENT_CONTENT(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.ARGUMENT_CONTENT);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.ARGUMENT_CONTENT, i);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_argActionBlock; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterArgActionBlock) {\r\n            listener.enterArgActionBlock(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitArgActionBlock) {\r\n            listener.exitArgActionBlock(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitArgActionBlock) {\r\n            return visitor.visitArgActionBlock(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class ModeSpecContext extends ParserRuleContext {\r\n    public MODE(): TerminalNode { return this.getToken(ANTLRv4Parser.MODE, 0); }\r\n    public identifier(): IdentifierContext {\r\n        return this.getRuleContext(0, IdentifierContext);\r\n    }\r\n    public SEMI(): TerminalNode { return this.getToken(ANTLRv4Parser.SEMI, 0); }\r\n    public lexerRuleSpec(): LexerRuleSpecContext[];\r\n    public lexerRuleSpec(i: number): LexerRuleSpecContext;\r\n    public lexerRuleSpec(i?: number): LexerRuleSpecContext | LexerRuleSpecContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(LexerRuleSpecContext);\r\n        } else {\r\n            return this.getRuleContext(i, LexerRuleSpecContext);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_modeSpec; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterModeSpec) {\r\n            listener.enterModeSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitModeSpec) {\r\n            listener.exitModeSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitModeSpec) {\r\n            return visitor.visitModeSpec(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class RulesContext extends ParserRuleContext {\r\n    public ruleSpec(): RuleSpecContext[];\r\n    public ruleSpec(i: number): RuleSpecContext;\r\n    public ruleSpec(i?: number): RuleSpecContext | RuleSpecContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(RuleSpecContext);\r\n        } else {\r\n            return this.getRuleContext(i, RuleSpecContext);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_rules; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterRules) {\r\n            listener.enterRules(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitRules) {\r\n            listener.exitRules(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitRules) {\r\n            return visitor.visitRules(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class RuleSpecContext extends ParserRuleContext {\r\n    public parserRuleSpec(): ParserRuleSpecContext | undefined {\r\n        return this.tryGetRuleContext(0, ParserRuleSpecContext);\r\n    }\r\n    public lexerRuleSpec(): LexerRuleSpecContext | undefined {\r\n        return this.tryGetRuleContext(0, LexerRuleSpecContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_ruleSpec; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterRuleSpec) {\r\n            listener.enterRuleSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitRuleSpec) {\r\n            listener.exitRuleSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitRuleSpec) {\r\n            return visitor.visitRuleSpec(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class ParserRuleSpecContext extends ParserRuleContext {\r\n    public RULE_REF(): TerminalNode { return this.getToken(ANTLRv4Parser.RULE_REF, 0); }\r\n    public COLON(): TerminalNode { return this.getToken(ANTLRv4Parser.COLON, 0); }\r\n    public ruleBlock(): RuleBlockContext {\r\n        return this.getRuleContext(0, RuleBlockContext);\r\n    }\r\n    public SEMI(): TerminalNode { return this.getToken(ANTLRv4Parser.SEMI, 0); }\r\n    public exceptionGroup(): ExceptionGroupContext {\r\n        return this.getRuleContext(0, ExceptionGroupContext);\r\n    }\r\n    public DOC_COMMENT(): TerminalNode[];\r\n    public DOC_COMMENT(i: number): TerminalNode;\r\n    public DOC_COMMENT(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.DOC_COMMENT);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.DOC_COMMENT, i);\r\n        }\r\n    }\r\n    public ruleModifiers(): RuleModifiersContext | undefined {\r\n        return this.tryGetRuleContext(0, RuleModifiersContext);\r\n    }\r\n    public argActionBlock(): ArgActionBlockContext | undefined {\r\n        return this.tryGetRuleContext(0, ArgActionBlockContext);\r\n    }\r\n    public ruleReturns(): RuleReturnsContext | undefined {\r\n        return this.tryGetRuleContext(0, RuleReturnsContext);\r\n    }\r\n    public throwsSpec(): ThrowsSpecContext | undefined {\r\n        return this.tryGetRuleContext(0, ThrowsSpecContext);\r\n    }\r\n    public localsSpec(): LocalsSpecContext | undefined {\r\n        return this.tryGetRuleContext(0, LocalsSpecContext);\r\n    }\r\n    public rulePrequel(): RulePrequelContext[];\r\n    public rulePrequel(i: number): RulePrequelContext;\r\n    public rulePrequel(i?: number): RulePrequelContext | RulePrequelContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(RulePrequelContext);\r\n        } else {\r\n            return this.getRuleContext(i, RulePrequelContext);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_parserRuleSpec; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterParserRuleSpec) {\r\n            listener.enterParserRuleSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitParserRuleSpec) {\r\n            listener.exitParserRuleSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitParserRuleSpec) {\r\n            return visitor.visitParserRuleSpec(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class ExceptionGroupContext extends ParserRuleContext {\r\n    public exceptionHandler(): ExceptionHandlerContext[];\r\n    public exceptionHandler(i: number): ExceptionHandlerContext;\r\n    public exceptionHandler(i?: number): ExceptionHandlerContext | ExceptionHandlerContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(ExceptionHandlerContext);\r\n        } else {\r\n            return this.getRuleContext(i, ExceptionHandlerContext);\r\n        }\r\n    }\r\n    public finallyClause(): FinallyClauseContext | undefined {\r\n        return this.tryGetRuleContext(0, FinallyClauseContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_exceptionGroup; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterExceptionGroup) {\r\n            listener.enterExceptionGroup(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitExceptionGroup) {\r\n            listener.exitExceptionGroup(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitExceptionGroup) {\r\n            return visitor.visitExceptionGroup(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class ExceptionHandlerContext extends ParserRuleContext {\r\n    public CATCH(): TerminalNode { return this.getToken(ANTLRv4Parser.CATCH, 0); }\r\n    public argActionBlock(): ArgActionBlockContext {\r\n        return this.getRuleContext(0, ArgActionBlockContext);\r\n    }\r\n    public actionBlock(): ActionBlockContext {\r\n        return this.getRuleContext(0, ActionBlockContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_exceptionHandler; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterExceptionHandler) {\r\n            listener.enterExceptionHandler(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitExceptionHandler) {\r\n            listener.exitExceptionHandler(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitExceptionHandler) {\r\n            return visitor.visitExceptionHandler(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class FinallyClauseContext extends ParserRuleContext {\r\n    public FINALLY(): TerminalNode { return this.getToken(ANTLRv4Parser.FINALLY, 0); }\r\n    public actionBlock(): ActionBlockContext {\r\n        return this.getRuleContext(0, ActionBlockContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_finallyClause; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterFinallyClause) {\r\n            listener.enterFinallyClause(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitFinallyClause) {\r\n            listener.exitFinallyClause(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitFinallyClause) {\r\n            return visitor.visitFinallyClause(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class RulePrequelContext extends ParserRuleContext {\r\n    public optionsSpec(): OptionsSpecContext | undefined {\r\n        return this.tryGetRuleContext(0, OptionsSpecContext);\r\n    }\r\n    public ruleAction(): RuleActionContext | undefined {\r\n        return this.tryGetRuleContext(0, RuleActionContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_rulePrequel; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterRulePrequel) {\r\n            listener.enterRulePrequel(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitRulePrequel) {\r\n            listener.exitRulePrequel(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitRulePrequel) {\r\n            return visitor.visitRulePrequel(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class RuleReturnsContext extends ParserRuleContext {\r\n    public RETURNS(): TerminalNode { return this.getToken(ANTLRv4Parser.RETURNS, 0); }\r\n    public argActionBlock(): ArgActionBlockContext {\r\n        return this.getRuleContext(0, ArgActionBlockContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_ruleReturns; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterRuleReturns) {\r\n            listener.enterRuleReturns(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitRuleReturns) {\r\n            listener.exitRuleReturns(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitRuleReturns) {\r\n            return visitor.visitRuleReturns(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class ThrowsSpecContext extends ParserRuleContext {\r\n    public THROWS(): TerminalNode { return this.getToken(ANTLRv4Parser.THROWS, 0); }\r\n    public identifier(): IdentifierContext[];\r\n    public identifier(i: number): IdentifierContext;\r\n    public identifier(i?: number): IdentifierContext | IdentifierContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(IdentifierContext);\r\n        } else {\r\n            return this.getRuleContext(i, IdentifierContext);\r\n        }\r\n    }\r\n    public COMMA(): TerminalNode[];\r\n    public COMMA(i: number): TerminalNode;\r\n    public COMMA(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.COMMA);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.COMMA, i);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_throwsSpec; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterThrowsSpec) {\r\n            listener.enterThrowsSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitThrowsSpec) {\r\n            listener.exitThrowsSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitThrowsSpec) {\r\n            return visitor.visitThrowsSpec(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LocalsSpecContext extends ParserRuleContext {\r\n    public LOCALS(): TerminalNode { return this.getToken(ANTLRv4Parser.LOCALS, 0); }\r\n    public argActionBlock(): ArgActionBlockContext {\r\n        return this.getRuleContext(0, ArgActionBlockContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_localsSpec; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLocalsSpec) {\r\n            listener.enterLocalsSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLocalsSpec) {\r\n            listener.exitLocalsSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLocalsSpec) {\r\n            return visitor.visitLocalsSpec(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class RuleActionContext extends ParserRuleContext {\r\n    public AT(): TerminalNode { return this.getToken(ANTLRv4Parser.AT, 0); }\r\n    public identifier(): IdentifierContext {\r\n        return this.getRuleContext(0, IdentifierContext);\r\n    }\r\n    public actionBlock(): ActionBlockContext {\r\n        return this.getRuleContext(0, ActionBlockContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_ruleAction; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterRuleAction) {\r\n            listener.enterRuleAction(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitRuleAction) {\r\n            listener.exitRuleAction(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitRuleAction) {\r\n            return visitor.visitRuleAction(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class RuleModifiersContext extends ParserRuleContext {\r\n    public ruleModifier(): RuleModifierContext[];\r\n    public ruleModifier(i: number): RuleModifierContext;\r\n    public ruleModifier(i?: number): RuleModifierContext | RuleModifierContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(RuleModifierContext);\r\n        } else {\r\n            return this.getRuleContext(i, RuleModifierContext);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_ruleModifiers; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterRuleModifiers) {\r\n            listener.enterRuleModifiers(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitRuleModifiers) {\r\n            listener.exitRuleModifiers(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitRuleModifiers) {\r\n            return visitor.visitRuleModifiers(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class RuleModifierContext extends ParserRuleContext {\r\n    public PUBLIC(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.PUBLIC, 0); }\r\n    public PRIVATE(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.PRIVATE, 0); }\r\n    public PROTECTED(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.PROTECTED, 0); }\r\n    public FRAGMENT(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.FRAGMENT, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_ruleModifier; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterRuleModifier) {\r\n            listener.enterRuleModifier(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitRuleModifier) {\r\n            listener.exitRuleModifier(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitRuleModifier) {\r\n            return visitor.visitRuleModifier(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class RuleBlockContext extends ParserRuleContext {\r\n    public ruleAltList(): RuleAltListContext {\r\n        return this.getRuleContext(0, RuleAltListContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_ruleBlock; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterRuleBlock) {\r\n            listener.enterRuleBlock(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitRuleBlock) {\r\n            listener.exitRuleBlock(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitRuleBlock) {\r\n            return visitor.visitRuleBlock(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class RuleAltListContext extends ParserRuleContext {\r\n    public labeledAlt(): LabeledAltContext[];\r\n    public labeledAlt(i: number): LabeledAltContext;\r\n    public labeledAlt(i?: number): LabeledAltContext | LabeledAltContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(LabeledAltContext);\r\n        } else {\r\n            return this.getRuleContext(i, LabeledAltContext);\r\n        }\r\n    }\r\n    public OR(): TerminalNode[];\r\n    public OR(i: number): TerminalNode;\r\n    public OR(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.OR);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.OR, i);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_ruleAltList; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterRuleAltList) {\r\n            listener.enterRuleAltList(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitRuleAltList) {\r\n            listener.exitRuleAltList(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitRuleAltList) {\r\n            return visitor.visitRuleAltList(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LabeledAltContext extends ParserRuleContext {\r\n    public alternative(): AlternativeContext {\r\n        return this.getRuleContext(0, AlternativeContext);\r\n    }\r\n    public POUND(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.POUND, 0); }\r\n    public identifier(): IdentifierContext | undefined {\r\n        return this.tryGetRuleContext(0, IdentifierContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_labeledAlt; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLabeledAlt) {\r\n            listener.enterLabeledAlt(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLabeledAlt) {\r\n            listener.exitLabeledAlt(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLabeledAlt) {\r\n            return visitor.visitLabeledAlt(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LexerRuleSpecContext extends ParserRuleContext {\r\n    public TOKEN_REF(): TerminalNode { return this.getToken(ANTLRv4Parser.TOKEN_REF, 0); }\r\n    public COLON(): TerminalNode { return this.getToken(ANTLRv4Parser.COLON, 0); }\r\n    public lexerRuleBlock(): LexerRuleBlockContext {\r\n        return this.getRuleContext(0, LexerRuleBlockContext);\r\n    }\r\n    public SEMI(): TerminalNode { return this.getToken(ANTLRv4Parser.SEMI, 0); }\r\n    public DOC_COMMENT(): TerminalNode[];\r\n    public DOC_COMMENT(i: number): TerminalNode;\r\n    public DOC_COMMENT(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.DOC_COMMENT);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.DOC_COMMENT, i);\r\n        }\r\n    }\r\n    public FRAGMENT(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.FRAGMENT, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_lexerRuleSpec; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLexerRuleSpec) {\r\n            listener.enterLexerRuleSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLexerRuleSpec) {\r\n            listener.exitLexerRuleSpec(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLexerRuleSpec) {\r\n            return visitor.visitLexerRuleSpec(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LexerRuleBlockContext extends ParserRuleContext {\r\n    public lexerAltList(): LexerAltListContext {\r\n        return this.getRuleContext(0, LexerAltListContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_lexerRuleBlock; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLexerRuleBlock) {\r\n            listener.enterLexerRuleBlock(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLexerRuleBlock) {\r\n            listener.exitLexerRuleBlock(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLexerRuleBlock) {\r\n            return visitor.visitLexerRuleBlock(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LexerAltListContext extends ParserRuleContext {\r\n    public lexerAlt(): LexerAltContext[];\r\n    public lexerAlt(i: number): LexerAltContext;\r\n    public lexerAlt(i?: number): LexerAltContext | LexerAltContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(LexerAltContext);\r\n        } else {\r\n            return this.getRuleContext(i, LexerAltContext);\r\n        }\r\n    }\r\n    public OR(): TerminalNode[];\r\n    public OR(i: number): TerminalNode;\r\n    public OR(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.OR);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.OR, i);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_lexerAltList; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLexerAltList) {\r\n            listener.enterLexerAltList(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLexerAltList) {\r\n            listener.exitLexerAltList(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLexerAltList) {\r\n            return visitor.visitLexerAltList(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LexerAltContext extends ParserRuleContext {\r\n    public lexerElements(): LexerElementsContext | undefined {\r\n        return this.tryGetRuleContext(0, LexerElementsContext);\r\n    }\r\n    public lexerCommands(): LexerCommandsContext | undefined {\r\n        return this.tryGetRuleContext(0, LexerCommandsContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_lexerAlt; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLexerAlt) {\r\n            listener.enterLexerAlt(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLexerAlt) {\r\n            listener.exitLexerAlt(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLexerAlt) {\r\n            return visitor.visitLexerAlt(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LexerElementsContext extends ParserRuleContext {\r\n    public lexerElement(): LexerElementContext[];\r\n    public lexerElement(i: number): LexerElementContext;\r\n    public lexerElement(i?: number): LexerElementContext | LexerElementContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(LexerElementContext);\r\n        } else {\r\n            return this.getRuleContext(i, LexerElementContext);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_lexerElements; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLexerElements) {\r\n            listener.enterLexerElements(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLexerElements) {\r\n            listener.exitLexerElements(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLexerElements) {\r\n            return visitor.visitLexerElements(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LexerElementContext extends ParserRuleContext {\r\n    public labeledLexerElement(): LabeledLexerElementContext | undefined {\r\n        return this.tryGetRuleContext(0, LabeledLexerElementContext);\r\n    }\r\n    public ebnfSuffix(): EbnfSuffixContext | undefined {\r\n        return this.tryGetRuleContext(0, EbnfSuffixContext);\r\n    }\r\n    public lexerAtom(): LexerAtomContext | undefined {\r\n        return this.tryGetRuleContext(0, LexerAtomContext);\r\n    }\r\n    public lexerBlock(): LexerBlockContext | undefined {\r\n        return this.tryGetRuleContext(0, LexerBlockContext);\r\n    }\r\n    public actionBlock(): ActionBlockContext | undefined {\r\n        return this.tryGetRuleContext(0, ActionBlockContext);\r\n    }\r\n    public QUESTION(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.QUESTION, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_lexerElement; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLexerElement) {\r\n            listener.enterLexerElement(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLexerElement) {\r\n            listener.exitLexerElement(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLexerElement) {\r\n            return visitor.visitLexerElement(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LabeledLexerElementContext extends ParserRuleContext {\r\n    public identifier(): IdentifierContext {\r\n        return this.getRuleContext(0, IdentifierContext);\r\n    }\r\n    public ASSIGN(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.ASSIGN, 0); }\r\n    public PLUS_ASSIGN(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.PLUS_ASSIGN, 0); }\r\n    public lexerAtom(): LexerAtomContext | undefined {\r\n        return this.tryGetRuleContext(0, LexerAtomContext);\r\n    }\r\n    public block(): BlockContext | undefined {\r\n        return this.tryGetRuleContext(0, BlockContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_labeledLexerElement; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLabeledLexerElement) {\r\n            listener.enterLabeledLexerElement(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLabeledLexerElement) {\r\n            listener.exitLabeledLexerElement(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLabeledLexerElement) {\r\n            return visitor.visitLabeledLexerElement(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LexerBlockContext extends ParserRuleContext {\r\n    public LPAREN(): TerminalNode { return this.getToken(ANTLRv4Parser.LPAREN, 0); }\r\n    public lexerAltList(): LexerAltListContext {\r\n        return this.getRuleContext(0, LexerAltListContext);\r\n    }\r\n    public RPAREN(): TerminalNode { return this.getToken(ANTLRv4Parser.RPAREN, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_lexerBlock; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLexerBlock) {\r\n            listener.enterLexerBlock(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLexerBlock) {\r\n            listener.exitLexerBlock(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLexerBlock) {\r\n            return visitor.visitLexerBlock(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LexerCommandsContext extends ParserRuleContext {\r\n    public RARROW(): TerminalNode { return this.getToken(ANTLRv4Parser.RARROW, 0); }\r\n    public lexerCommand(): LexerCommandContext[];\r\n    public lexerCommand(i: number): LexerCommandContext;\r\n    public lexerCommand(i?: number): LexerCommandContext | LexerCommandContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(LexerCommandContext);\r\n        } else {\r\n            return this.getRuleContext(i, LexerCommandContext);\r\n        }\r\n    }\r\n    public COMMA(): TerminalNode[];\r\n    public COMMA(i: number): TerminalNode;\r\n    public COMMA(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.COMMA);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.COMMA, i);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_lexerCommands; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLexerCommands) {\r\n            listener.enterLexerCommands(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLexerCommands) {\r\n            listener.exitLexerCommands(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLexerCommands) {\r\n            return visitor.visitLexerCommands(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LexerCommandContext extends ParserRuleContext {\r\n    public lexerCommandName(): LexerCommandNameContext {\r\n        return this.getRuleContext(0, LexerCommandNameContext);\r\n    }\r\n    public LPAREN(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.LPAREN, 0); }\r\n    public lexerCommandExpr(): LexerCommandExprContext | undefined {\r\n        return this.tryGetRuleContext(0, LexerCommandExprContext);\r\n    }\r\n    public RPAREN(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.RPAREN, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_lexerCommand; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLexerCommand) {\r\n            listener.enterLexerCommand(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLexerCommand) {\r\n            listener.exitLexerCommand(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLexerCommand) {\r\n            return visitor.visitLexerCommand(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LexerCommandNameContext extends ParserRuleContext {\r\n    public identifier(): IdentifierContext | undefined {\r\n        return this.tryGetRuleContext(0, IdentifierContext);\r\n    }\r\n    public MODE(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.MODE, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_lexerCommandName; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLexerCommandName) {\r\n            listener.enterLexerCommandName(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLexerCommandName) {\r\n            listener.exitLexerCommandName(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLexerCommandName) {\r\n            return visitor.visitLexerCommandName(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LexerCommandExprContext extends ParserRuleContext {\r\n    public identifier(): IdentifierContext | undefined {\r\n        return this.tryGetRuleContext(0, IdentifierContext);\r\n    }\r\n    public INT(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.INT, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_lexerCommandExpr; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLexerCommandExpr) {\r\n            listener.enterLexerCommandExpr(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLexerCommandExpr) {\r\n            listener.exitLexerCommandExpr(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLexerCommandExpr) {\r\n            return visitor.visitLexerCommandExpr(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class AltListContext extends ParserRuleContext {\r\n    public alternative(): AlternativeContext[];\r\n    public alternative(i: number): AlternativeContext;\r\n    public alternative(i?: number): AlternativeContext | AlternativeContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(AlternativeContext);\r\n        } else {\r\n            return this.getRuleContext(i, AlternativeContext);\r\n        }\r\n    }\r\n    public OR(): TerminalNode[];\r\n    public OR(i: number): TerminalNode;\r\n    public OR(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.OR);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.OR, i);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_altList; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterAltList) {\r\n            listener.enterAltList(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitAltList) {\r\n            listener.exitAltList(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitAltList) {\r\n            return visitor.visitAltList(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class AlternativeContext extends ParserRuleContext {\r\n    public elementOptions(): ElementOptionsContext | undefined {\r\n        return this.tryGetRuleContext(0, ElementOptionsContext);\r\n    }\r\n    public element(): ElementContext[];\r\n    public element(i: number): ElementContext;\r\n    public element(i?: number): ElementContext | ElementContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(ElementContext);\r\n        } else {\r\n            return this.getRuleContext(i, ElementContext);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_alternative; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterAlternative) {\r\n            listener.enterAlternative(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitAlternative) {\r\n            listener.exitAlternative(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitAlternative) {\r\n            return visitor.visitAlternative(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class ElementContext extends ParserRuleContext {\r\n    public labeledElement(): LabeledElementContext | undefined {\r\n        return this.tryGetRuleContext(0, LabeledElementContext);\r\n    }\r\n    public ebnfSuffix(): EbnfSuffixContext | undefined {\r\n        return this.tryGetRuleContext(0, EbnfSuffixContext);\r\n    }\r\n    public atom(): AtomContext | undefined {\r\n        return this.tryGetRuleContext(0, AtomContext);\r\n    }\r\n    public ebnf(): EbnfContext | undefined {\r\n        return this.tryGetRuleContext(0, EbnfContext);\r\n    }\r\n    public actionBlock(): ActionBlockContext | undefined {\r\n        return this.tryGetRuleContext(0, ActionBlockContext);\r\n    }\r\n    public QUESTION(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.QUESTION, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_element; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterElement) {\r\n            listener.enterElement(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitElement) {\r\n            listener.exitElement(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitElement) {\r\n            return visitor.visitElement(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LabeledElementContext extends ParserRuleContext {\r\n    public identifier(): IdentifierContext {\r\n        return this.getRuleContext(0, IdentifierContext);\r\n    }\r\n    public ASSIGN(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.ASSIGN, 0); }\r\n    public PLUS_ASSIGN(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.PLUS_ASSIGN, 0); }\r\n    public atom(): AtomContext | undefined {\r\n        return this.tryGetRuleContext(0, AtomContext);\r\n    }\r\n    public block(): BlockContext | undefined {\r\n        return this.tryGetRuleContext(0, BlockContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_labeledElement; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLabeledElement) {\r\n            listener.enterLabeledElement(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLabeledElement) {\r\n            listener.exitLabeledElement(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLabeledElement) {\r\n            return visitor.visitLabeledElement(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class EbnfContext extends ParserRuleContext {\r\n    public block(): BlockContext {\r\n        return this.getRuleContext(0, BlockContext);\r\n    }\r\n    public blockSuffix(): BlockSuffixContext | undefined {\r\n        return this.tryGetRuleContext(0, BlockSuffixContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_ebnf; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterEbnf) {\r\n            listener.enterEbnf(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitEbnf) {\r\n            listener.exitEbnf(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitEbnf) {\r\n            return visitor.visitEbnf(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class BlockSuffixContext extends ParserRuleContext {\r\n    public ebnfSuffix(): EbnfSuffixContext {\r\n        return this.getRuleContext(0, EbnfSuffixContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_blockSuffix; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterBlockSuffix) {\r\n            listener.enterBlockSuffix(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitBlockSuffix) {\r\n            listener.exitBlockSuffix(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitBlockSuffix) {\r\n            return visitor.visitBlockSuffix(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class EbnfSuffixContext extends ParserRuleContext {\r\n    public QUESTION(): TerminalNode[];\r\n    public QUESTION(i: number): TerminalNode;\r\n    public QUESTION(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.QUESTION);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.QUESTION, i);\r\n        }\r\n    }\r\n    public STAR(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.STAR, 0); }\r\n    public PLUS(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.PLUS, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_ebnfSuffix; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterEbnfSuffix) {\r\n            listener.enterEbnfSuffix(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitEbnfSuffix) {\r\n            listener.exitEbnfSuffix(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitEbnfSuffix) {\r\n            return visitor.visitEbnfSuffix(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class LexerAtomContext extends ParserRuleContext {\r\n    public characterRange(): CharacterRangeContext | undefined {\r\n        return this.tryGetRuleContext(0, CharacterRangeContext);\r\n    }\r\n    public terminalRule(): TerminalRuleContext | undefined {\r\n        return this.tryGetRuleContext(0, TerminalRuleContext);\r\n    }\r\n    public notSet(): NotSetContext | undefined {\r\n        return this.tryGetRuleContext(0, NotSetContext);\r\n    }\r\n    public LEXER_CHAR_SET(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.LEXER_CHAR_SET, 0); }\r\n    public DOT(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.DOT, 0); }\r\n    public elementOptions(): ElementOptionsContext | undefined {\r\n        return this.tryGetRuleContext(0, ElementOptionsContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_lexerAtom; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterLexerAtom) {\r\n            listener.enterLexerAtom(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitLexerAtom) {\r\n            listener.exitLexerAtom(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitLexerAtom) {\r\n            return visitor.visitLexerAtom(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class AtomContext extends ParserRuleContext {\r\n    public characterRange(): CharacterRangeContext | undefined {\r\n        return this.tryGetRuleContext(0, CharacterRangeContext);\r\n    }\r\n    public terminalRule(): TerminalRuleContext | undefined {\r\n        return this.tryGetRuleContext(0, TerminalRuleContext);\r\n    }\r\n    public ruleref(): RulerefContext | undefined {\r\n        return this.tryGetRuleContext(0, RulerefContext);\r\n    }\r\n    public notSet(): NotSetContext | undefined {\r\n        return this.tryGetRuleContext(0, NotSetContext);\r\n    }\r\n    public DOT(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.DOT, 0); }\r\n    public elementOptions(): ElementOptionsContext | undefined {\r\n        return this.tryGetRuleContext(0, ElementOptionsContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_atom; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterAtom) {\r\n            listener.enterAtom(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitAtom) {\r\n            listener.exitAtom(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitAtom) {\r\n            return visitor.visitAtom(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class NotSetContext extends ParserRuleContext {\r\n    public NOT(): TerminalNode { return this.getToken(ANTLRv4Parser.NOT, 0); }\r\n    public setElement(): SetElementContext | undefined {\r\n        return this.tryGetRuleContext(0, SetElementContext);\r\n    }\r\n    public blockSet(): BlockSetContext | undefined {\r\n        return this.tryGetRuleContext(0, BlockSetContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_notSet; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterNotSet) {\r\n            listener.enterNotSet(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitNotSet) {\r\n            listener.exitNotSet(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitNotSet) {\r\n            return visitor.visitNotSet(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class BlockSetContext extends ParserRuleContext {\r\n    public LPAREN(): TerminalNode { return this.getToken(ANTLRv4Parser.LPAREN, 0); }\r\n    public setElement(): SetElementContext[];\r\n    public setElement(i: number): SetElementContext;\r\n    public setElement(i?: number): SetElementContext | SetElementContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(SetElementContext);\r\n        } else {\r\n            return this.getRuleContext(i, SetElementContext);\r\n        }\r\n    }\r\n    public RPAREN(): TerminalNode { return this.getToken(ANTLRv4Parser.RPAREN, 0); }\r\n    public OR(): TerminalNode[];\r\n    public OR(i: number): TerminalNode;\r\n    public OR(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.OR);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.OR, i);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_blockSet; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterBlockSet) {\r\n            listener.enterBlockSet(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitBlockSet) {\r\n            listener.exitBlockSet(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitBlockSet) {\r\n            return visitor.visitBlockSet(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class SetElementContext extends ParserRuleContext {\r\n    public TOKEN_REF(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.TOKEN_REF, 0); }\r\n    public elementOptions(): ElementOptionsContext | undefined {\r\n        return this.tryGetRuleContext(0, ElementOptionsContext);\r\n    }\r\n    public STRING_LITERAL(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.STRING_LITERAL, 0); }\r\n    public characterRange(): CharacterRangeContext | undefined {\r\n        return this.tryGetRuleContext(0, CharacterRangeContext);\r\n    }\r\n    public LEXER_CHAR_SET(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.LEXER_CHAR_SET, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_setElement; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterSetElement) {\r\n            listener.enterSetElement(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitSetElement) {\r\n            listener.exitSetElement(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitSetElement) {\r\n            return visitor.visitSetElement(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class BlockContext extends ParserRuleContext {\r\n    public LPAREN(): TerminalNode { return this.getToken(ANTLRv4Parser.LPAREN, 0); }\r\n    public altList(): AltListContext {\r\n        return this.getRuleContext(0, AltListContext);\r\n    }\r\n    public RPAREN(): TerminalNode { return this.getToken(ANTLRv4Parser.RPAREN, 0); }\r\n    public COLON(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.COLON, 0); }\r\n    public optionsSpec(): OptionsSpecContext | undefined {\r\n        return this.tryGetRuleContext(0, OptionsSpecContext);\r\n    }\r\n    public ruleAction(): RuleActionContext[];\r\n    public ruleAction(i: number): RuleActionContext;\r\n    public ruleAction(i?: number): RuleActionContext | RuleActionContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(RuleActionContext);\r\n        } else {\r\n            return this.getRuleContext(i, RuleActionContext);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_block; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterBlock) {\r\n            listener.enterBlock(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitBlock) {\r\n            listener.exitBlock(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitBlock) {\r\n            return visitor.visitBlock(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class RulerefContext extends ParserRuleContext {\r\n    public RULE_REF(): TerminalNode { return this.getToken(ANTLRv4Parser.RULE_REF, 0); }\r\n    public argActionBlock(): ArgActionBlockContext | undefined {\r\n        return this.tryGetRuleContext(0, ArgActionBlockContext);\r\n    }\r\n    public elementOptions(): ElementOptionsContext | undefined {\r\n        return this.tryGetRuleContext(0, ElementOptionsContext);\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_ruleref; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterRuleref) {\r\n            listener.enterRuleref(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitRuleref) {\r\n            listener.exitRuleref(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitRuleref) {\r\n            return visitor.visitRuleref(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class CharacterRangeContext extends ParserRuleContext {\r\n    public STRING_LITERAL(): TerminalNode[];\r\n    public STRING_LITERAL(i: number): TerminalNode;\r\n    public STRING_LITERAL(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.STRING_LITERAL);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.STRING_LITERAL, i);\r\n        }\r\n    }\r\n    public RANGE(): TerminalNode { return this.getToken(ANTLRv4Parser.RANGE, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_characterRange; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterCharacterRange) {\r\n            listener.enterCharacterRange(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitCharacterRange) {\r\n            listener.exitCharacterRange(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitCharacterRange) {\r\n            return visitor.visitCharacterRange(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class TerminalRuleContext extends ParserRuleContext {\r\n    public TOKEN_REF(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.TOKEN_REF, 0); }\r\n    public elementOptions(): ElementOptionsContext | undefined {\r\n        return this.tryGetRuleContext(0, ElementOptionsContext);\r\n    }\r\n    public STRING_LITERAL(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.STRING_LITERAL, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_terminalRule; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterTerminalRule) {\r\n            listener.enterTerminalRule(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitTerminalRule) {\r\n            listener.exitTerminalRule(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitTerminalRule) {\r\n            return visitor.visitTerminalRule(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class ElementOptionsContext extends ParserRuleContext {\r\n    public LT(): TerminalNode { return this.getToken(ANTLRv4Parser.LT, 0); }\r\n    public elementOption(): ElementOptionContext[];\r\n    public elementOption(i: number): ElementOptionContext;\r\n    public elementOption(i?: number): ElementOptionContext | ElementOptionContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(ElementOptionContext);\r\n        } else {\r\n            return this.getRuleContext(i, ElementOptionContext);\r\n        }\r\n    }\r\n    public GT(): TerminalNode { return this.getToken(ANTLRv4Parser.GT, 0); }\r\n    public COMMA(): TerminalNode[];\r\n    public COMMA(i: number): TerminalNode;\r\n    public COMMA(i?: number): TerminalNode | TerminalNode[] {\r\n        if (i === undefined) {\r\n            return this.getTokens(ANTLRv4Parser.COMMA);\r\n        } else {\r\n            return this.getToken(ANTLRv4Parser.COMMA, i);\r\n        }\r\n    }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_elementOptions; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterElementOptions) {\r\n            listener.enterElementOptions(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitElementOptions) {\r\n            listener.exitElementOptions(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitElementOptions) {\r\n            return visitor.visitElementOptions(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class ElementOptionContext extends ParserRuleContext {\r\n    public identifier(): IdentifierContext[];\r\n    public identifier(i: number): IdentifierContext;\r\n    public identifier(i?: number): IdentifierContext | IdentifierContext[] {\r\n        if (i === undefined) {\r\n            return this.getRuleContexts(IdentifierContext);\r\n        } else {\r\n            return this.getRuleContext(i, IdentifierContext);\r\n        }\r\n    }\r\n    public ASSIGN(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.ASSIGN, 0); }\r\n    public STRING_LITERAL(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.STRING_LITERAL, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_elementOption; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterElementOption) {\r\n            listener.enterElementOption(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitElementOption) {\r\n            listener.exitElementOption(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitElementOption) {\r\n            return visitor.visitElementOption(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class IdentifierContext extends ParserRuleContext {\r\n    public RULE_REF(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.RULE_REF, 0); }\r\n    public TOKEN_REF(): TerminalNode | undefined { return this.tryGetToken(ANTLRv4Parser.TOKEN_REF, 0); }\r\n    constructor(parent: ParserRuleContext | undefined, invokingState: number) {\r\n        super(parent, invokingState);\r\n    }\r\n    // @Override\r\n    public override get ruleIndex(): number { return ANTLRv4Parser.RULE_identifier; }\r\n    // @Override\r\n    public override enterRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.enterIdentifier) {\r\n            listener.enterIdentifier(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override exitRule(listener: ANTLRv4ParserListener): void {\r\n        if (listener.exitIdentifier) {\r\n            listener.exitIdentifier(this);\r\n        }\r\n    }\r\n    // @Override\r\n    public override accept<Result>(visitor: ANTLRv4ParserVisitor<Result>): Result {\r\n        if (visitor.visitIdentifier) {\r\n            return visitor.visitIdentifier(this);\r\n        } else {\r\n            return visitor.visitChildren(this);\r\n        }\r\n    }\r\n}\r\n"]}