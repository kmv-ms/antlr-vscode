{"version":3,"file":"ANTLRv4ParserListener.js","sourceRoot":"","sources":["../../../src/parser/ANTLRv4ParserListener.ts"],"names":[],"mappings":"","sourcesContent":["// Generated from grammars/ANTLRv4Parser.g4 by ANTLR 4.9.0-SNAPSHOT\r\n\r\n\r\nimport { ParseTreeListener } from \"antlr4ts/tree/ParseTreeListener\";\r\n\r\nimport { GrammarSpecContext } from \"./ANTLRv4Parser\";\r\nimport { GrammarTypeContext } from \"./ANTLRv4Parser\";\r\nimport { PrequelConstructContext } from \"./ANTLRv4Parser\";\r\nimport { OptionsSpecContext } from \"./ANTLRv4Parser\";\r\nimport { OptionContext } from \"./ANTLRv4Parser\";\r\nimport { OptionValueContext } from \"./ANTLRv4Parser\";\r\nimport { DelegateGrammarsContext } from \"./ANTLRv4Parser\";\r\nimport { DelegateGrammarContext } from \"./ANTLRv4Parser\";\r\nimport { TokensSpecContext } from \"./ANTLRv4Parser\";\r\nimport { ChannelsSpecContext } from \"./ANTLRv4Parser\";\r\nimport { IdListContext } from \"./ANTLRv4Parser\";\r\nimport { NamedActionContext } from \"./ANTLRv4Parser\";\r\nimport { ActionScopeNameContext } from \"./ANTLRv4Parser\";\r\nimport { ActionBlockContext } from \"./ANTLRv4Parser\";\r\nimport { ArgActionBlockContext } from \"./ANTLRv4Parser\";\r\nimport { ModeSpecContext } from \"./ANTLRv4Parser\";\r\nimport { RulesContext } from \"./ANTLRv4Parser\";\r\nimport { RuleSpecContext } from \"./ANTLRv4Parser\";\r\nimport { ParserRuleSpecContext } from \"./ANTLRv4Parser\";\r\nimport { ExceptionGroupContext } from \"./ANTLRv4Parser\";\r\nimport { ExceptionHandlerContext } from \"./ANTLRv4Parser\";\r\nimport { FinallyClauseContext } from \"./ANTLRv4Parser\";\r\nimport { RulePrequelContext } from \"./ANTLRv4Parser\";\r\nimport { RuleReturnsContext } from \"./ANTLRv4Parser\";\r\nimport { ThrowsSpecContext } from \"./ANTLRv4Parser\";\r\nimport { LocalsSpecContext } from \"./ANTLRv4Parser\";\r\nimport { RuleActionContext } from \"./ANTLRv4Parser\";\r\nimport { RuleModifiersContext } from \"./ANTLRv4Parser\";\r\nimport { RuleModifierContext } from \"./ANTLRv4Parser\";\r\nimport { RuleBlockContext } from \"./ANTLRv4Parser\";\r\nimport { RuleAltListContext } from \"./ANTLRv4Parser\";\r\nimport { LabeledAltContext } from \"./ANTLRv4Parser\";\r\nimport { LexerRuleSpecContext } from \"./ANTLRv4Parser\";\r\nimport { LexerRuleBlockContext } from \"./ANTLRv4Parser\";\r\nimport { LexerAltListContext } from \"./ANTLRv4Parser\";\r\nimport { LexerAltContext } from \"./ANTLRv4Parser\";\r\nimport { LexerElementsContext } from \"./ANTLRv4Parser\";\r\nimport { LexerElementContext } from \"./ANTLRv4Parser\";\r\nimport { LabeledLexerElementContext } from \"./ANTLRv4Parser\";\r\nimport { LexerBlockContext } from \"./ANTLRv4Parser\";\r\nimport { LexerCommandsContext } from \"./ANTLRv4Parser\";\r\nimport { LexerCommandContext } from \"./ANTLRv4Parser\";\r\nimport { LexerCommandNameContext } from \"./ANTLRv4Parser\";\r\nimport { LexerCommandExprContext } from \"./ANTLRv4Parser\";\r\nimport { AltListContext } from \"./ANTLRv4Parser\";\r\nimport { AlternativeContext } from \"./ANTLRv4Parser\";\r\nimport { ElementContext } from \"./ANTLRv4Parser\";\r\nimport { LabeledElementContext } from \"./ANTLRv4Parser\";\r\nimport { EbnfContext } from \"./ANTLRv4Parser\";\r\nimport { BlockSuffixContext } from \"./ANTLRv4Parser\";\r\nimport { EbnfSuffixContext } from \"./ANTLRv4Parser\";\r\nimport { LexerAtomContext } from \"./ANTLRv4Parser\";\r\nimport { AtomContext } from \"./ANTLRv4Parser\";\r\nimport { NotSetContext } from \"./ANTLRv4Parser\";\r\nimport { BlockSetContext } from \"./ANTLRv4Parser\";\r\nimport { SetElementContext } from \"./ANTLRv4Parser\";\r\nimport { BlockContext } from \"./ANTLRv4Parser\";\r\nimport { RulerefContext } from \"./ANTLRv4Parser\";\r\nimport { CharacterRangeContext } from \"./ANTLRv4Parser\";\r\nimport { TerminalRuleContext } from \"./ANTLRv4Parser\";\r\nimport { ElementOptionsContext } from \"./ANTLRv4Parser\";\r\nimport { ElementOptionContext } from \"./ANTLRv4Parser\";\r\nimport { IdentifierContext } from \"./ANTLRv4Parser\";\r\n\r\n\r\n/**\r\n * This interface defines a complete listener for a parse tree produced by\r\n * `ANTLRv4Parser`.\r\n */\r\nexport interface ANTLRv4ParserListener extends ParseTreeListener {\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.grammarSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterGrammarSpec?: (ctx: GrammarSpecContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.grammarSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitGrammarSpec?: (ctx: GrammarSpecContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.grammarType`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterGrammarType?: (ctx: GrammarTypeContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.grammarType`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitGrammarType?: (ctx: GrammarTypeContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.prequelConstruct`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterPrequelConstruct?: (ctx: PrequelConstructContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.prequelConstruct`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitPrequelConstruct?: (ctx: PrequelConstructContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.optionsSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterOptionsSpec?: (ctx: OptionsSpecContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.optionsSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitOptionsSpec?: (ctx: OptionsSpecContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.option`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterOption?: (ctx: OptionContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.option`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitOption?: (ctx: OptionContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.optionValue`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterOptionValue?: (ctx: OptionValueContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.optionValue`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitOptionValue?: (ctx: OptionValueContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.delegateGrammars`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterDelegateGrammars?: (ctx: DelegateGrammarsContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.delegateGrammars`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitDelegateGrammars?: (ctx: DelegateGrammarsContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.delegateGrammar`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterDelegateGrammar?: (ctx: DelegateGrammarContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.delegateGrammar`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitDelegateGrammar?: (ctx: DelegateGrammarContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.tokensSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterTokensSpec?: (ctx: TokensSpecContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.tokensSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitTokensSpec?: (ctx: TokensSpecContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.channelsSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterChannelsSpec?: (ctx: ChannelsSpecContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.channelsSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitChannelsSpec?: (ctx: ChannelsSpecContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.idList`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterIdList?: (ctx: IdListContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.idList`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitIdList?: (ctx: IdListContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.namedAction`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterNamedAction?: (ctx: NamedActionContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.namedAction`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitNamedAction?: (ctx: NamedActionContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.actionScopeName`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterActionScopeName?: (ctx: ActionScopeNameContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.actionScopeName`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitActionScopeName?: (ctx: ActionScopeNameContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.actionBlock`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterActionBlock?: (ctx: ActionBlockContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.actionBlock`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitActionBlock?: (ctx: ActionBlockContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.argActionBlock`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterArgActionBlock?: (ctx: ArgActionBlockContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.argActionBlock`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitArgActionBlock?: (ctx: ArgActionBlockContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.modeSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterModeSpec?: (ctx: ModeSpecContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.modeSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitModeSpec?: (ctx: ModeSpecContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.rules`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterRules?: (ctx: RulesContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.rules`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitRules?: (ctx: RulesContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.ruleSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterRuleSpec?: (ctx: RuleSpecContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.ruleSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitRuleSpec?: (ctx: RuleSpecContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.parserRuleSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterParserRuleSpec?: (ctx: ParserRuleSpecContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.parserRuleSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitParserRuleSpec?: (ctx: ParserRuleSpecContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.exceptionGroup`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterExceptionGroup?: (ctx: ExceptionGroupContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.exceptionGroup`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitExceptionGroup?: (ctx: ExceptionGroupContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.exceptionHandler`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterExceptionHandler?: (ctx: ExceptionHandlerContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.exceptionHandler`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitExceptionHandler?: (ctx: ExceptionHandlerContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.finallyClause`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterFinallyClause?: (ctx: FinallyClauseContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.finallyClause`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitFinallyClause?: (ctx: FinallyClauseContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.rulePrequel`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterRulePrequel?: (ctx: RulePrequelContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.rulePrequel`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitRulePrequel?: (ctx: RulePrequelContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.ruleReturns`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterRuleReturns?: (ctx: RuleReturnsContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.ruleReturns`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitRuleReturns?: (ctx: RuleReturnsContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.throwsSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterThrowsSpec?: (ctx: ThrowsSpecContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.throwsSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitThrowsSpec?: (ctx: ThrowsSpecContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.localsSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLocalsSpec?: (ctx: LocalsSpecContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.localsSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLocalsSpec?: (ctx: LocalsSpecContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.ruleAction`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterRuleAction?: (ctx: RuleActionContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.ruleAction`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitRuleAction?: (ctx: RuleActionContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.ruleModifiers`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterRuleModifiers?: (ctx: RuleModifiersContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.ruleModifiers`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitRuleModifiers?: (ctx: RuleModifiersContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.ruleModifier`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterRuleModifier?: (ctx: RuleModifierContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.ruleModifier`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitRuleModifier?: (ctx: RuleModifierContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.ruleBlock`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterRuleBlock?: (ctx: RuleBlockContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.ruleBlock`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitRuleBlock?: (ctx: RuleBlockContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.ruleAltList`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterRuleAltList?: (ctx: RuleAltListContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.ruleAltList`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitRuleAltList?: (ctx: RuleAltListContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.labeledAlt`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLabeledAlt?: (ctx: LabeledAltContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.labeledAlt`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLabeledAlt?: (ctx: LabeledAltContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.lexerRuleSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLexerRuleSpec?: (ctx: LexerRuleSpecContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.lexerRuleSpec`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLexerRuleSpec?: (ctx: LexerRuleSpecContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.lexerRuleBlock`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLexerRuleBlock?: (ctx: LexerRuleBlockContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.lexerRuleBlock`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLexerRuleBlock?: (ctx: LexerRuleBlockContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.lexerAltList`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLexerAltList?: (ctx: LexerAltListContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.lexerAltList`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLexerAltList?: (ctx: LexerAltListContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.lexerAlt`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLexerAlt?: (ctx: LexerAltContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.lexerAlt`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLexerAlt?: (ctx: LexerAltContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.lexerElements`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLexerElements?: (ctx: LexerElementsContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.lexerElements`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLexerElements?: (ctx: LexerElementsContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.lexerElement`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLexerElement?: (ctx: LexerElementContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.lexerElement`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLexerElement?: (ctx: LexerElementContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.labeledLexerElement`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLabeledLexerElement?: (ctx: LabeledLexerElementContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.labeledLexerElement`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLabeledLexerElement?: (ctx: LabeledLexerElementContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.lexerBlock`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLexerBlock?: (ctx: LexerBlockContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.lexerBlock`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLexerBlock?: (ctx: LexerBlockContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.lexerCommands`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLexerCommands?: (ctx: LexerCommandsContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.lexerCommands`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLexerCommands?: (ctx: LexerCommandsContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.lexerCommand`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLexerCommand?: (ctx: LexerCommandContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.lexerCommand`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLexerCommand?: (ctx: LexerCommandContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.lexerCommandName`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLexerCommandName?: (ctx: LexerCommandNameContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.lexerCommandName`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLexerCommandName?: (ctx: LexerCommandNameContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.lexerCommandExpr`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLexerCommandExpr?: (ctx: LexerCommandExprContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.lexerCommandExpr`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLexerCommandExpr?: (ctx: LexerCommandExprContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.altList`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterAltList?: (ctx: AltListContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.altList`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitAltList?: (ctx: AltListContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.alternative`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterAlternative?: (ctx: AlternativeContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.alternative`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitAlternative?: (ctx: AlternativeContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.element`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterElement?: (ctx: ElementContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.element`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitElement?: (ctx: ElementContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.labeledElement`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLabeledElement?: (ctx: LabeledElementContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.labeledElement`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLabeledElement?: (ctx: LabeledElementContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.ebnf`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterEbnf?: (ctx: EbnfContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.ebnf`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitEbnf?: (ctx: EbnfContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.blockSuffix`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterBlockSuffix?: (ctx: BlockSuffixContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.blockSuffix`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitBlockSuffix?: (ctx: BlockSuffixContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.ebnfSuffix`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterEbnfSuffix?: (ctx: EbnfSuffixContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.ebnfSuffix`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitEbnfSuffix?: (ctx: EbnfSuffixContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.lexerAtom`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterLexerAtom?: (ctx: LexerAtomContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.lexerAtom`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitLexerAtom?: (ctx: LexerAtomContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.atom`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterAtom?: (ctx: AtomContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.atom`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitAtom?: (ctx: AtomContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.notSet`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterNotSet?: (ctx: NotSetContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.notSet`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitNotSet?: (ctx: NotSetContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.blockSet`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterBlockSet?: (ctx: BlockSetContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.blockSet`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitBlockSet?: (ctx: BlockSetContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.setElement`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterSetElement?: (ctx: SetElementContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.setElement`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitSetElement?: (ctx: SetElementContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.block`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterBlock?: (ctx: BlockContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.block`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitBlock?: (ctx: BlockContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.ruleref`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterRuleref?: (ctx: RulerefContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.ruleref`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitRuleref?: (ctx: RulerefContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.characterRange`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterCharacterRange?: (ctx: CharacterRangeContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.characterRange`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitCharacterRange?: (ctx: CharacterRangeContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.terminalRule`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterTerminalRule?: (ctx: TerminalRuleContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.terminalRule`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitTerminalRule?: (ctx: TerminalRuleContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.elementOptions`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterElementOptions?: (ctx: ElementOptionsContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.elementOptions`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitElementOptions?: (ctx: ElementOptionsContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.elementOption`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterElementOption?: (ctx: ElementOptionContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.elementOption`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitElementOption?: (ctx: ElementOptionContext) => void;\r\n\r\n\t/**\r\n\t * Enter a parse tree produced by `ANTLRv4Parser.identifier`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\tenterIdentifier?: (ctx: IdentifierContext) => void;\r\n\t/**\r\n\t * Exit a parse tree produced by `ANTLRv4Parser.identifier`.\r\n\t * @param ctx the parse tree\r\n\t */\r\n\texitIdentifier?: (ctx: IdentifierContext) => void;\r\n}\r\n\r\n"]}